{
    "version": "https://jsonfeed.org/version/1",
    "title": "気合でなんとか",
    "home_page_url": "https://ningensei848.github.io/",
    "description": "Kiai (@ningensei848) が日々を生きた証",
    "items": [
        {
            "id": "/2022/06/17/",
            "content_html": "<p>「～を利用して」という表現には「個々人に \"集めさせる\"」という意図がある。\nすなわち、Twitter API を個人で利用する分にはたかだか５０万 tw/month 程度までしか収集できない一方で、複数人の力を合わせればその量を N 倍に増やせるという企みである。</p><p>じゃあ、どうやってそれを実現するのか？ということを考えているので、それをメモしておく。</p><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"手順\">手順<a class=\"hash-link\" href=\"#手順\" title=\"Direct link to heading\">​</a></h2><ol><li>ツイート収集メソッドの確立</li><li>収集動機の言語化</li><li>データを分析できるツールの開発</li></ol><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"ツイート収集メソッド\">ツイート収集メソッド<a class=\"hash-link\" href=\"#ツイート収集メソッド\" title=\"Direct link to heading\">​</a></h2><p><strong>素人でもツイートを集められる方法を確立する</strong></p><p>まず自分のツイートを利用して「ツイート収集ツール」の公開リポジトリを用意する。\nこれは、対象の user_id を列挙しておけば定期的にスクリプトが走ってツイートを保存するというものだ。</p><p>あとは GitHub アカウントの作成からリポジトリのクローン、user_id の編集、リポジトリの private 化、 Actions の有効化……等々のインストラクションを記事にして共有すれば、誰でもツイートを集めうる。</p><div class=\"theme-admonition theme-admonition-caution alert alert--warning admonition_LlT9\"><div class=\"admonitionHeading_tbUL\"><span class=\"admonitionIcon_kALy\"><svg viewBox=\"0 0 16 16\"><path fill-rule=\"evenodd\" d=\"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z\"></path></svg></span>caution</div><div class=\"admonitionContent_S0QG\"><p><strong>リポジトリの private 化</strong> は必須である。\nなぜなら著作権的に怒られる可能性が高いからだ。</p><p>例として挙げる自分のリポジトリについては、著作権の放棄を明記するか、対象のデータを明示的に削除できるスクリプトもオプションでつけておくべきだろう。</p></div></div><p>また、エディタを持たない一般の素人には、ファイル編集でさえも億劫となるかもしれない問題がある。\nこちらは、GitHub がブラウザ上で提供するエディタでファイル一つだけを編集できるようにすればよいと思われる。\n初見では戸惑うであろう <code>git add</code> <code>git commit</code> 等の操作を省略できるのも好材料だろう。</p><p>こういった一つ一つのアプローチについて、<a href=\"https://zenn.dev/ningensei848\" target=\"_blank\" rel=\"noopener noreferrer\">zenn</a> なり <a href=\"https://note.com/ningensei848\" target=\"_blank\" rel=\"noopener noreferrer\">note</a> なりに手順を事細かに述べておくとよい。</p><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"動機の言語化\">動機の言語化<a class=\"hash-link\" href=\"#動機の言語化\" title=\"Direct link to heading\">​</a></h2><p><strong>集めたいと思わせる動機を言語化して認知させる</strong></p><p>ツイートを集められる状況が整ったとして、それをどう使うのかという点が明らかではないと行動へ移しづらいだろう。\nプログラミングやデータ分析など考えたこともない一般人であればなおさらである。</p><p>例えば、訴訟での証拠としてツイートが採用されることがあるが、単なるスクショよりも信頼性の高いデータを得ることができる。\n本文はもとより、ツイートされた日時、それを取得した日時、その時点での RT 数等も取得できる。</p><p><a href=\"https://megalodon.jp\" target=\"_blank\" rel=\"noopener noreferrer\">Web 魚拓</a>等の外部サービスとは異なり、自分だけが届く範囲にデータを置くことで意図せず削除される心配がない。\nツイ消しの憂き目に会っても、自分だけは生データを持っているというアドバンテージを得られる。</p><p>また、API の制限こそあれど、その範囲内であれば複数のアカウントに対してツイートを取得することができる（一人に対して１リポジトリといった運用を避けられる）。\n加えて、「いいねしたツイート」も並行して集めることができる。</p><p>さらに、次の述べるような分析ツールに丸々データを投げ込むことで、データを可視化することができるかもしれない。</p><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"分析ツールの開発\">分析ツールの開発<a class=\"hash-link\" href=\"#分析ツールの開発\" title=\"Direct link to heading\">​</a></h2><p><strong>集めたツイートを分析できるツールを設置する</strong></p><p>検索はもとより、ワードクラウドで頻出単語群を見やすくしたり、リプライを交わす仲の良いアカウントが誰なのか人目でわかるようにしたり、いいねしがちなツイートの傾向を探ったりできる。\n本来であれば自分のアカウントで連携サービスに許可を出した上で自分のアカウントに対してしか実行できなかった操作を、他人についてもできるとなればかなり魅力的ではないだろうか。</p><p>……といったところで、規約的な問題が発生しそうなことにも気がついた。</p><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"懸念シェアしたい\">懸念：シェアしたい<a class=\"hash-link\" href=\"#懸念シェアしたい\" title=\"Direct link to heading\">​</a></h3><p>「結果をシェアしたい！」という要望が多く生まれると想定されるが、1⃣ 他人のデータを勝手に抜いて 2⃣ 分析ツールに突っ込み 3⃣ 結果を広く公衆に掲示する　という場合、どこかでなにかしら引っかかりそうだ。</p><p>現状の感覚として、1⃣2⃣ は問題なく行えそうだが、3⃣ については Twitter 側の規約に違反していそうな気がする。</p><p>一方で、あくまで二次的なデータだけであれば、そこについてツイート主体が権利侵害を訴えることはできない（なんの権利も侵害していないため）。</p><p>既存のツイートデータ分析ツールは「自分のツイート」に対して、連携サービスに許可を出した上で分析させるものであって、ツイートした主体が異なる場合はどうなるのか不明である。\nこの「許可を出す」のは、API 経由でツイートを取得するためだけということであれば、権利主体が異なっても特段問題はないのだろうか…</p><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"まとめ\">まとめ<a class=\"hash-link\" href=\"#まとめ\" title=\"Direct link to heading\">​</a></h2><p>３つの手順をこなして、実際に分析ツールを使ってくれるようになれば、<strong>そのバックエンドでは不定期にデータが蓄積されていく</strong>。</p><ul><li>サービスの提供者は API 制限を気にすることなくツイートを集めることができる</li><li>サービスの受益者は手元にあるツイートを手軽に分析して付加価値を得られる</li></ul><p>両者 win-win であるといえよう。</p><p>問題があるとすれば、知らず知らずのうちにデータを取得されたターゲットだが、ここまで特段の権利は侵害していないはずだし、Twitter 社の規約にも従っているはずだ。\nソーシャルシェア機能をつけると問題になるかもしれないが、こちらにも抜け道がある気がしないでもない。</p><p>アイデアは形になってこそ価値があるので、誰かに真似される前に実行に移したいなぁ（夏終わるまでにやりたいね）</p>",
            "url": "https://ningensei848.github.io/2022/06/17/",
            "title": "Tweet を不特定多数の人々\"を利用して\"集めたい",
            "summary": "「～を利用して」という表現には「個々人に \"集めさせる\"」という意図がある。",
            "date_modified": "2022-06-17T00:00:00.000Z",
            "author": {
                "name": "Kiai",
                "url": "https://twitter.com/Ningensei848"
            },
            "tags": [
                "Twitter",
                "hcomp"
            ]
        },
        {
            "id": "/2022/06/09/",
            "content_html": "<p><a href=\"https://github.com/Ningensei848/ML4Keiba\" target=\"_blank\" rel=\"noopener noreferrer\">ML4Keiba</a> としてデータを集めるのはいいが、その後についてきちんと考えをまとめていなかった。\nマイルストーンというほど定かではないが、現在考えているいろいろなことをメモとして残す。</p><p>What までは書いてあるが、実際の具体的な How については自分の頭の中にあるだけだ。\nこれもどこかきちんと出力しておきたいが……また別の問題が生じるかもしれないので、後々考えることにする。</p><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"内容\">内容<a class=\"hash-link\" href=\"#内容\" title=\"Direct link to heading\">​</a></h2><ul><li>各種レーティング<ul><li>血統</li><li>騎手成績</li><li>厩舎成績</li></ul></li><li>コース内外の有利・不利</li><li>脚質推定</li><li>例外処理<ul><li>海外レース</li><li>同着・降着</li><li>その他アクシデント</li></ul></li><li>学習モデルの更新頻度</li><li>各データを比較したときの順位づけアルゴリズム</li><li>パフォーマンスによる変動幅推定</li><li>体重による結果の変化</li><li>サービスとしてローンチする前に</li></ul><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"レーティング\">レーティング<a class=\"hash-link\" href=\"#レーティング\" title=\"Direct link to heading\">​</a></h2><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"馬の血統\">馬の血統<a class=\"hash-link\" href=\"#馬の血統\" title=\"Direct link to heading\">​</a></h3><p>馬ごとの血統については、どの馬についても確実に情報が存在しているし、時間が経っても変化しない。\nレーティングの算出方法についてはいくつかやり方があるだろうが、おそらく良さそうな先例があるはずなのでそれを採用するべき（未だ詳しく調べていない）。</p><p>このレーティングさえあれば、新馬戦はもとよりその他のレースでも基礎基本となる議論が展開しうる。</p><p>Sire / BMS についても考慮し始めると重み付けに難航する予感がしている。\n精度を高めるのは後だと割り切り、まずは各々の算出からはじめる。</p><p>最初から完璧なものを作ろうとすると挫折しがちなので、まずは深く考えず親の競走成績で比較する程度でよいだろう。\nちょっとずつ工夫できそうなところを増やしていくことを心がけたい。</p><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"騎手成績\">騎手成績<a class=\"hash-link\" href=\"#騎手成績\" title=\"Direct link to heading\">​</a></h3><p>各騎手には各々レース結果があるので、そこから統計値が出せるはず。\n初年度の新人騎手については 1⃣ 考慮に入れない 2⃣ レースに参加する騎手のうち、相対的な位置に置いて考える　などがあろう。\nある程度経験してみないとわからないということもあり、複数年度の騎乗経験に達するまではレーティング不問とする程度がいいかもしれない</p><p>個人の力量ではなく、斤量による有利不利を可視化できるだけでもありがたいかも</p><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"厩舎成績\">厩舎成績<a class=\"hash-link\" href=\"#厩舎成績\" title=\"Direct link to heading\">​</a></h3><p>所属によっては、出走傾向とか成績に偏りがあるものと思われる。\n（私が知っているものだと、メジロ牧場の馬は天皇賞絶対主義だったとかそういう話）</p><p>あまり重要なデータとも思えないが、精度を高めるピースにはなりうるかもしれない。</p><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"内外の有利不利と脚質\">内外の有利不利と脚質<a class=\"hash-link\" href=\"#内外の有利不利と脚質\" title=\"Direct link to heading\">​</a></h2><p>レースごとの統計値、騎手ごとの統計値は出せるはず。\n過去１０年では内枠外枠それぞれどのくらいの勝率なのか？がわかるだけでかなり傾向は絞れるだろう。</p><p>ここに脚質推定が加わることで、展開予想にも通じうる。\n例えば内枠が勝ちまくっているのは、単に短い距離を走ることになるからスタミナ勝負担っているという話なのか、それとも逃げ馬ばかりが抜け出しやすかったからなのかとか……\nコースごとの傾向が抽出できると、かなり大きな検討材料となりうるだろう。</p><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"例外処理\">例外処理<a class=\"hash-link\" href=\"#例外処理\" title=\"Direct link to heading\">​</a></h2><p>同着や海外レース出走など、過去のデータがうまく正規化されない場合の対処を検討せねばならない。\n現在のデータ収集スクリプトだと、その辺がうまく処理できていない疑惑がある。</p><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"学習モデルの更新頻度\">学習モデルの更新頻度<a class=\"hash-link\" href=\"#学習モデルの更新頻度\" title=\"Direct link to heading\">​</a></h2><p>やがては上記までの情報をモデリングして入力、ということが起こるのだろうが、そのモデルは逐次更新する必要があるかもしれない。</p><p>例えば、入力値に「出走馬とその枠、騎手、馬体重」を入れたい場合、前走までのデータも学習してある必要がある。\nもしそうでなければ、出された予測が必ずしも正しいとはいえないだろう。\nしかし、これだと週一ないし毎日モデル更新せねばならないかもしれない。\nそうなるとリソース的にも危ういし、そもそも時間が足りなくなるかもしれない。</p><p>上記の入力に加えて、近走最大 4 走のデータも受け付けるようにすれば、少しは改善するかも？\n言い換えれば、５走以上前のデータで学習して、直近４走のデータを入力として算出させる。\nこういうアプローチなら、更新頻度が月一程度に抑えられそうな気がする。</p><p>といいつつ、この辺のメタな話は全然経験がないなのでテキトー漕いてる可能性が高い。\n参考にはしないように………</p><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"各データを比較したときの順位づけアルゴリズム\">各データを比較したときの順位づけアルゴリズム<a class=\"hash-link\" href=\"#各データを比較したときの順位づけアルゴリズム\" title=\"Direct link to heading\">​</a></h2><p>モデルで機械学習云々よりも、まずは個々の統計データやレーティングが出せれば、その都度有利不利を算出することができそう。</p><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"パフォーマンスによる変動幅推定\">パフォーマンスによる変動幅推定<a class=\"hash-link\" href=\"#パフォーマンスによる変動幅推定\" title=\"Direct link to heading\">​</a></h2><p>馬が本来の力を発揮できたか否かによって順位は変わるはず。\n絶好調ならここまで、絶不調でも最低ここまで、という目安は需要ありそう。</p><p>うまく行ければ一着、もしだめでも３着という馬がいれば、買い目はかなり変わってくるだろう。</p><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"体重による結果の変化\">体重による結果の変化<a class=\"hash-link\" href=\"#体重による結果の変化\" title=\"Direct link to heading\">​</a></h2><p>インタラクティブにやるべきものとして、前走と体重が同じ場合と比較してどのように結果が変動するのか？を知りたい。\n(馬体重は直前にしか知ることができない、事前にシミュレーションできるツールは現時点ではなさそう)</p><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"サービスとしてローンチする前に\">サービスとしてローンチする前に<a class=\"hash-link\" href=\"#サービスとしてローンチする前に\" title=\"Direct link to heading\">​</a></h2><p>note 等で予想を書いてメインレースだけ課金させるというのが良さそう。</p><p>それまでの予想は課金するかどうか検討材料として提供する。\nそこでお金が集まればサービスとしてやれる確信になるし、ダメそうなら撤退する選択肢が取れる。</p><p>→ 　リスクを測る装置として取り組むのが良さそう</p><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"まとめ\">まとめ<a class=\"hash-link\" href=\"#まとめ\" title=\"Direct link to heading\">​</a></h2><p>現状の考えをまとめた。</p><p>なにはともあれ、レーティング算出から始めてみて、それをもとに予想する記事を note なりで書いてみて、実際にどのくらいイケるか試すのがいいだろう。</p><p>あたってくだけつつ、試行錯誤を繰り返すしかない……！</p>",
            "url": "https://ningensei848.github.io/2022/06/09/",
            "title": "ML4Keiba の展望",
            "summary": "ML4Keiba としてデータを集めるのはいいが、その後についてきちんと考えをまとめていなかった。",
            "date_modified": "2022-06-09T00:00:00.000Z",
            "author": {
                "name": "Kiai",
                "url": "https://twitter.com/Ningensei848"
            },
            "tags": [
                "ml4keiba",
                "python",
                "競馬"
            ]
        },
        {
            "id": "/2022/06/08/",
            "content_html": "<p>３月末に申請していた \"GitHub Codespaces\" のベータ版が今月初旬に到来していた。\n<a href=\"/2022/04/01\">4 月の冒頭</a>で苦労していたことが嘘のように解決してしまい、今後も手放せないプロダクトとなりそうな予感がある。</p><p>早速使ってみた感想を述べる。</p><div class=\"theme-admonition theme-admonition-caution alert alert--warning admonition_LlT9\"><div class=\"admonitionHeading_tbUL\"><span class=\"admonitionIcon_kALy\"><svg viewBox=\"0 0 16 16\"><path fill-rule=\"evenodd\" d=\"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z\"></path></svg></span>追記 2022/06/10 13:15</div><div class=\"admonitionContent_S0QG\"><p>ブラウザ上で色々とやっている関係で、ウラで JS が頑張っている事情がある。\nこれを AdBlock 等で止めてしまうと、うまくページが表示されない。</p><p><strong><code>github.dev</code> や <code>githubpreview.dev</code> に対してはブロックを実行しない設定に変更する</strong>ことで、JS の邪魔をせずページを表示させることができた。</p></div></div><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"すげぇポイントのまとめ\">すげぇポイントのまとめ<a class=\"hash-link\" href=\"#すげぇポイントのまとめ\" title=\"Direct link to heading\">​</a></h2><ul><li>port 開放を検出して自動でフォワーディング</li><li>ローカルブラウザのキャッシュではなく、リモートサーバ側に作業記録が残る</li></ul><p>痒いところに手が届かなかった <a href=\"https://vscode.dev/\" target=\"_blank\" rel=\"noopener noreferrer\">vscode.dev</a> から一転、これらの問題を解決できたことでほぼ VSCode 同然の使い心地となった。</p><p>今後リソース調節が可能になれば、単なるデスクトップ版よりもずっと素晴らしいものになるだろう。</p><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"前提codespaces-ってなに\">前提：codespaces ってなに？<a class=\"hash-link\" href=\"#前提codespaces-ってなに\" title=\"Direct link to heading\">​</a></h2><iframe width=\"356\" height=\"200\" src=\"https://www.youtube.com/embed/j5VQ8OlwbqI?feature=oembed\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen=\"\" title=\"Welcome to Codespaces - GitHub Universe 2020\"></iframe><blockquote><p><strong>短時間で構築できる開発環境</strong></p><p>GitHub から離れることなく、Visual Studio Code を利用できます。</p><p>Let's join ! ------&gt; <a href=\"https://github.co.jp/features/codespaces\" target=\"_blank\" rel=\"noopener noreferrer\">GitHub Codespaces Official Page</a></p></blockquote><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"雑な感想\">雑な感想<a class=\"hash-link\" href=\"#雑な感想\" title=\"Direct link to heading\">​</a></h2><p>まだ全然カスタムしていないのだが、ほぼ VSCode そのものと言っていい使い心地である。\nChrome 等のブラウザから利用する制約上、多少はショートカットキーが被って意図しない操作をすることがあるが、入力に違和感はないしターミナルも使える。\nなんの文句もないだろう。</p><p>でもフロント開発をやろうとしたときに、ローカルサーバ立ててポート開けるのは無理よな～～～～と思いつつ何気なく起動してみたところ、なんと特段設定することなくポートフォワーディングを実施してアクセスできた（は？）</p><p>codespaces と同様の発想でコミュニティ主導で開発が進められていた <a href=\"https://github.com/coder/code-server\" target=\"_blank\" rel=\"noopener noreferrer\">code-server</a> においては、ngrok 等の様々な workaround (つまり迂回策)を通じてリモートサーバ上に立てたローカルサーバにフォワーディングしていた（らしい）。\n言うまでもなく色々知識と作業が必要で心理的障壁があった印象なのだが、codespaces ではそんなもの一切考えなくてもよい仕組みが整っていた（まじでどういう実装なんや？？？？）</p><p><img loading=\"lazy\" alt=\"現在開けているポートに関する、右下にホップした通知\" src=\"/assets/images/codespaces_portforwarding-e59be5d66f39a032185bfe285c8a757f.png\" width=\"473\" height=\"165\" class=\"img_ev3q\"></p><p>codespaces とは別に、直接 repository を開いて編集できる vscode.dev という仕組みがすでにあり、こちらは申請しなくとも GitHub ユーザであれば誰でも利用可能である。\nただし、こちらにはそれなりの制約もある。\n例えば、一時的にファイル編集ができるというだけなので、「コミットした」という状態を保持できない。\nすなわち、コミットしたらすぐプッシュという運用になる（コミット自体はできるものの、それの取り消しやら種々の git 操作に制約がある）</p><p>この問題についても、 codespaces は解決している。\nブラウザのみで完結するのではなく、一度 space を create すると、その作業記録がリモートサーバ側に保存されるからだ。\nいまはまだ無料で使えているものの、この「状態の保存」はサーバリソースを専有してしまうことになるため、近い将来には課金する必要が出てくるかもしれないと思った。</p><p>拡張機能について、 vscode.dev では機能しなかったものについても、codespaces では 通常の VSCode と同様に使うことができるようだ。\n上述してきたように、ブラウザだけではなく、サーバの実行環境にも触れるからだと思われる。</p><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"不満な点勘違い疑惑も含む\">不満な点（勘違い疑惑も含む）<a class=\"hash-link\" href=\"#不満な点勘違い疑惑も含む\" title=\"Direct link to heading\">​</a></h2><p><del>例えばマークダウンで記事を書いたときに、その変更を反映する HMR がうまく機能していない気がする（要検討）</del></p><p><del>ターミナル側では爆速でコンパイルしてくれている感じがするのだが、一方でフォワーディングしたブラウザからはうまく見えなかった。</del></p><p><del>これについては、技術云々と言うより筆者の環境の問題な可能性もある。</del></p><p>ローカルでサーバを動かしているときは、サーバ側でコンテンツの変更を検知してリロードをかけていた（？）のだが、ポートフォワーディングではそこまで面倒は見てくれないため、逐次手動でページ更新する必要がある。\nまた、ポート番号は同じでも、サーバを起動するたびにフォワーディングした URL は別物として再設定される仕組みなようだ。</p><p>（「うまく機能していない気がする」と感じたのは、開発サーバを再起動してしまいページが変わっていたから）</p><p>流石にこの問題はフォワーディングされているリモートサーバの側からどうこうできそうにないため、適宜手動でやっていくか、定期的にページ更新をかけるスクリプトやら拡張機能やらをローカルに仕込むしかないだろう。</p><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"展望\">展望<a class=\"hash-link\" href=\"#展望\" title=\"Direct link to heading\">​</a></h2><p><img loading=\"lazy\" alt=\"codespaces のマシンタイプ指定\" src=\"/assets/images/change_codespace_machine_type-d87c3d249991b6167607a44f682d285f.png\" width=\"661\" height=\"332\" class=\"img_ev3q\"></p><p>現在、利用できるマシンスペックとしては「4 core / 8 GB メモリ / 32 GB ストレージ」という一種類で固定されていた。</p><p>これが無料で使えるというのもだいぶ豪華であるが、目的によってはストレージが不足していたり、もっとメモリが使いたいという要望は出てくるだろう。\nこのあたりの微調整ができるようになるというのは、きっと素晴らしい未来への大きな一歩だと思う。</p><hr><p>個人が端末を選ばずにプログラミングできるようになることはもとより、チームでの開発がものすごく加速されるんだろうな～～～という直感を得た。\nすでに GitHub Teams や Enterprise では採用されているところもあるらしいが、こんなん反則やろ！！！！！！というツッコミが身をもって体感できた。</p><p>古くからあるエディタ論争に終止符が打たれ、世の中の開発者の共通環境として VSCode が覇権を取る日もそう遠くないのだろう……</p>",
            "url": "https://ningensei848.github.io/2022/06/08/",
            "title": "GitHub Codespaces やっべぇんですの！というご報告",
            "summary": "３月末に申請していた \"GitHub Codespaces\" のベータ版が今月初旬に到来していた。",
            "date_modified": "2022-06-08T00:00:00.000Z",
            "author": {
                "name": "Kiai",
                "url": "https://twitter.com/Ningensei848"
            },
            "tags": [
                "日記",
                "GitHub",
                "Codespaces"
            ]
        },
        {
            "id": "/2022/05/15/",
            "content_html": "<p>故あって Twitter API を利用してデータを取得している。\nnetkeiba.com をスクレイピングするときのように、\"餅から米を得る\" みたいなことはしなくて済むのがありがたい。\nドキュメントも整理されており文句は無い……と言いたいが、痒いところに手が届かなかったので、その愚痴を纏める。</p><p>なお、本記事では<a href=\"https://developer.twitter.com/en/docs/twitter-api\" target=\"_blank\" rel=\"noopener noreferrer\">公式のドキュメント</a>以上の新しい情報は無い。\n本当に使ってみた感想と、今後に期待する要望、それと少しの workaround があるかも〜程度である。</p><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"良いところ\">良いところ<a class=\"hash-link\" href=\"#良いところ\" title=\"Direct link to heading\">​</a></h2><p>いつのまにか発表されていつのまにか標準になっていた Twitter Developper API v2 だが、 v1.1 と比べて何がどうなったのか？</p><p>最も実感しやすいのが、レスポンスのスリム化だと感じた。\nv1.1 では、不要な情報も全て JSON でドバッと返ってきた。\n特に仕様を知らなくてもトークンさえ与えれば良い感じのデータを得られるので利用者側としては万々歳だが、データを捌くサーバ側からすると不必要な負担が増えこそすれ減らないという状況があったようだ。</p><p>v2 からは、リクエストに必要な最低限の情報を渡すと、本当に最低限のデータしか返ってこない。\n例えば <a href=\"https://developer.twitter.com/en/docs/twitter-api/tweets/search/api-reference/get-tweets-search-recent\" target=\"_blank\" rel=\"noopener noreferrer\"><code>/2/tweets/search/recent</code></a> では、パラメタとして指定すべきは <code>query</code> だけである。\nこれに対して返ってくるのは、以下のような JSON データだ。</p><details class=\"details_lb9f alert alert--info details_b_Ee\" data-collapsed=\"true\"><summary>実際のレスポンスデータ</summary><div><div class=\"collapsibleContent_i85q\"><div class=\"language-json codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#393A34;--prism-background-color:#f6f8fa\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-json codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token punctuation\" style=\"color:#393A34\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">  </span><span class=\"token property\" style=\"color:#36acaa\">\"data\"</span><span class=\"token operator\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">[</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token punctuation\" style=\"color:#393A34\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">      </span><span class=\"token property\" style=\"color:#36acaa\">\"id\"</span><span class=\"token operator\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">\"1373001119480344583\"</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">      </span><span class=\"token property\" style=\"color:#36acaa\">\"text\"</span><span class=\"token operator\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">\"Looking to get started with the Twitter API but new to APIs in general? @jessicagarson will walk you through everything you need to know in APIs 101 session. She’ll use examples using our v2 endpoints, Tuesday, March 23rd at 1 pm EST.nnJoin us on Twitchnhttps://t.co/GrtBOXyHmB\"</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token punctuation\" style=\"color:#393A34\">}</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token punctuation\" style=\"color:#393A34\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">      </span><span class=\"token property\" style=\"color:#36acaa\">\"id\"</span><span class=\"token operator\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">\"1372627771717869568\"</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">      </span><span class=\"token property\" style=\"color:#36acaa\">\"text\"</span><span class=\"token operator\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">\"Thanks to everyone who joined and made today a great session! 🙌 nnIf weren't able to attend, we've got you covered. Academic researchers can now sign up for office hours for help using the new product track. See how you can sign up, here 👇nhttps://t.co/duIkd27lPx https://t.co/AP9YY4F8FG\"</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token punctuation\" style=\"color:#393A34\">}</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token punctuation\" style=\"color:#393A34\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">      </span><span class=\"token property\" style=\"color:#36acaa\">\"id\"</span><span class=\"token operator\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">\"1367519323925843968\"</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">      </span><span class=\"token property\" style=\"color:#36acaa\">\"text\"</span><span class=\"token operator\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">\"Meet Aviary, a modern client for iOS 14 built using the new Twitter API. It has a beautiful UI and great widgets to keep you up to date with the latest Tweets. https://t.co/95cbd253jK\"</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token punctuation\" style=\"color:#393A34\">}</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token punctuation\" style=\"color:#393A34\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">      </span><span class=\"token property\" style=\"color:#36acaa\">\"id\"</span><span class=\"token operator\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">\"1366832168333234177\"</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">      </span><span class=\"token property\" style=\"color:#36acaa\">\"text\"</span><span class=\"token operator\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">\"The new #TwitterAPI provides the ability to build the Tweet payload with the fields that you want. nnIn this tutorial @suhemparack explains how to build the new Tweet payload and how it compares with the old Tweet payload in v1.1 👇 https://t.co/eQZulq4Ik3\"</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token punctuation\" style=\"color:#393A34\">}</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token punctuation\" style=\"color:#393A34\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">      </span><span class=\"token property\" style=\"color:#36acaa\">\"id\"</span><span class=\"token operator\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">\"1364984313154916352\"</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">      </span><span class=\"token property\" style=\"color:#36acaa\">\"text\"</span><span class=\"token operator\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">\"“I was heading to a design conference in New York and wanted to meet new people,” recalls @aaronykng, creator of @flocknet. “There wasn't an easy way to see all of the designers in my network, so I built one.” Making things like this opened the doors for him to the tech industry.\"</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token punctuation\" style=\"color:#393A34\">}</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token punctuation\" style=\"color:#393A34\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">      </span><span class=\"token property\" style=\"color:#36acaa\">\"id\"</span><span class=\"token operator\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">\"1364275610764201984\"</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">      </span><span class=\"token property\" style=\"color:#36acaa\">\"text\"</span><span class=\"token operator\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">\"If you're newly approved for the Academic Research product track, our next stream is for you.nnThis Thursday, February 25th at 10AM PST @suhemparack will demo how academics can use this track to get started with the new #TwitterAPInnJoin us on Twitch! 👀nhttps://t.co/SQziibOD9P\"</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token punctuation\" style=\"color:#393A34\">}</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">  </span><span class=\"token punctuation\" style=\"color:#393A34\">]</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">  </span><span class=\"token property\" style=\"color:#36acaa\">\"meta\"</span><span class=\"token operator\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token property\" style=\"color:#36acaa\">\"newest_id\"</span><span class=\"token operator\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">\"1373001119480344583\"</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token property\" style=\"color:#36acaa\">\"oldest_id\"</span><span class=\"token operator\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">\"1364275610764201984\"</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token property\" style=\"color:#36acaa\">\"result_count\"</span><span class=\"token operator\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token number\" style=\"color:#36acaa\">6</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">  </span><span class=\"token punctuation\" style=\"color:#393A34\">}</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:#393A34\">}</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg class=\"copyButtonIcon_y97N\" viewBox=\"0 0 24 24\"><path d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg class=\"copyButtonSuccessIcon_LjdS\" viewBox=\"0 0 24 24\"><path d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div></div></div></details><p>v1.1 でくっついていた様々なメタ情報が悉くスリム化されていることで、見やすいし読みやすい。</p><p>これだけじゃあ情報量少なすぎるという指摘はもっともだが、これは各種パラメータをどんどん増やすことで解決する。\n必要な属性といらない属性をリクエスト時点で決められるというのが、利用者としても管理者としても都合のいい落とし所であると思った。</p><p>そして何よりドキュメントがきちんと整えられているのが好印象を残す。\n無論最初は dev portal だの OAuth 2.0 だの Bearer Token だのよくわからん……という壁があったが、実は単に英語を読めていないだけというオチが待ち受けている（のできちんとじっくり読んでみよう）</p><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"よくない点\">よくない点<a class=\"hash-link\" href=\"#よくない点\" title=\"Direct link to heading\">​</a></h2><p>これは燦然と輝く大きなクソが一つある。</p><p><strong>ツイート検索を API から行なうと、直近 3200 件までしか遡れない</strong></p><p>これは Essential であろうと Elevated Standard であろうと同様である。\nじゃあ Academic Research は……とおもったらこちらもまだダメであるらしい（？）</p><p>cf. <a href=\"https://twittercommunity.com/t/tweet-limit-at-3200/156391/4\" target=\"_blank\" rel=\"noopener noreferrer\">https://twittercommunity.com/t/tweet-limit-at-3200/156391/4</a></p><p>上述した <code>/2/tweets/search</code> というエンドポイントから提供されうる上限がそこにあるということだろうか</p><p>ただし、 Academic Research であればどれだけ過去であっても「クエリを工夫すれば」アクセスすることは出来るようだ。\n<code>until:YYYY-MM-DD since:YYYY-MM-DD</code> をいちいちつけなきゃいけね〜ってのが、いまの API v2 のつれぇとこだよな〜〜</p><hr><p>時点でクソなのは、 <a href=\"https://developer.twitter.com/en/docs/twitter-api/tweet-caps\" target=\"_blank\" rel=\"noopener noreferrer\">Tweet caps</a> の存在である。\nこれは、一ヶ月あたりのツイート取得上限をさす。</p><p>Essential だと 500 K = 五十万ツイート　である。\nElevated だとこれが 200 万、 Academic だと 1000 万まで緩和されるが、timeline だけでなく Like を探る場合でも枠が消費されてしまうらしい。</p><p>API を何らかのアプリに載せて手動でチマチマデータを得るだけなら十分に余裕のある数値だ。\nしかし、 Rate Limit ギリギリを攻めながら膨大なデータを取得しようとする場合には、下手すれば 3~5 日程度で枠を使い切ってしまう。</p><p>今回は、必要なデータを試算したときにこの容量上限問題にぶち当たってしまった。\nはちゃめちゃに大量のデータを取得しうるところまでは良いとして、実際にそれを集めようとすると無理なの悲しすぎる……</p><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"まとめ\">まとめ<a class=\"hash-link\" href=\"#まとめ\" title=\"Direct link to heading\">​</a></h2><p>っていうこの悩みも実は金を出せば解決できる可能性は高い。</p><p>Elevated であれ Academic であれ、すべて無償で提供されている API を活用しようとしたときに制限と戦うことになるわけだ。</p><p>Twitter が提供するビッグなデータで勝負したいと腹を決めたのなら、なんとかして課金するのも一つの手なのかもしれない。</p><p>ってなわけで、明日はどうすれば課金アクセスできるのか調べんとな……コストの見積もり出して算盤弾けてこそ、きちんとした価値ある社会人だと思うので（絶賛ニート無職並感）</p>",
            "url": "https://ningensei848.github.io/2022/05/15/",
            "title": "Twitter API v2 (Elevated) はいいけどよくないという話",
            "summary": "故あって Twitter API を利用してデータを取得している。",
            "date_modified": "2022-05-15T00:00:00.000Z",
            "author": {
                "name": "Kiai",
                "url": "https://twitter.com/Ningensei848"
            },
            "tags": [
                "日記",
                "Twitter"
            ]
        },
        {
            "id": "/2022/05/11/",
            "content_html": "<p><a href=\"/2022/04/01\">4 月の冒頭</a>でも紹介したように、PC 環境が無くなって一か月が経とうとしている。\n三月末のギリギリになって無線キーボードとマウスを購入し、どうにか物理入力インタフェースは確保したが、プログラミング環境は満足に得られていない状況が続いている。</p><p>色々と足掻けば何かしら解決したのかもしれないが、その代わりにもっと別の価値ある（と思い込んでいる）ことに勤しんで 4 月は消えた（ついでに GW も）。</p><p>じゃあ具体的に何をしていたのかというと、ひたすら調査をしていた。</p><p>学部一年時の JKJ こと情報基礎実習で学んだように、名前と所属をひたすらググって特定・記録・魚拓……</p><p>この辺のやり方は忘れないうちにきちんとメモしておきたい。\nというかあとで必要になるから確実に明文化しておかねば……</p><hr><p>おおよそ一か月強という期間で終えられたのは幸いだった。\n自意識肥大というか、「色気」を出しすぎた人々だったのが効いているのだと思う。</p><p>一方で、「木を隠すなら森の中」を全力で執行する人々もいた。\nこれは完全に予想でしかないが、名前やら所属やらにアイデンティティを見出さなくてもいい程度に恵まれているということなのかもしれない。\nそれはそれでいい人生だなぁ……</p><hr><p>で、これで調査を終えるわけではなく、むしろこれが始まりと言える。\n現状ただ単にググったものをまとめただけだし、これがまさしく正しいと胸を張って言えるわけではなく、ゴネられたら負ける微妙なラインのものも含まれている。\n鍵かけて引き篭もられたら負けなので、まずは必要なデータを全部引っこ抜いてから、その後本人確定を進めていければ良いと思う。\nついでにインタビュー調査までやれると GOOD ではあるが、さすがにそこまでできるかというと不安が残るところ。</p><hr><p>「距離を取れ」との呼びかけからも分かるとおり、あれは身内への号令に他ならない。\nつまり、これへの同調はムラの一員であることの表明に他ならない。</p><p>という視点で見ると、やはり FF 関係は掘ってみるべきだろう。\n彼らがどんな世界を見ていたのか、どんな景色が見えているのかを知っておきたい。\n広く世の中を見据えたときに「白」であるものも、その集団内においては「赤」く見えることもあるのやも。</p><p>そしてそれが明らかになれば、今度は白く見えている人々の方から自発的に「赤」い勢力と距離を取ることができる。\n交われば赤くなる……そうならないためにも、赤を隔離しておこう。</p><p>「差別反対」なんてお題目は唱えさせない。<br>\n「「距離を取れ」と叫ぶ人から距離を取る」ことのどこが差別なのだろうか？</p><hr><p>ともあれ、今はまだ PC 環境がない。\nもちろん金を出せば解決する問題ではあるが、肝心の金がない。\n金を稼ぐには PC が必要……鶏卵問題である。</p><p>もっと note に記事を書いてお駄賃をねだろうか？\nかけるネタはあるが、それをやるにはまだ準備が足りないのだなぁ…</p>",
            "url": "https://ningensei848.github.io/2022/05/11/",
            "title": "PC 環境がなくなって1ヶ月半が経過したけど…？",
            "summary": "4 月の冒頭でも紹介したように、PC 環境が無くなって一か月が経とうとしている。",
            "date_modified": "2022-05-11T00:00:00.000Z",
            "author": {
                "name": "Kiai",
                "url": "https://twitter.com/Ningensei848"
            },
            "tags": [
                "日記"
            ]
        },
        {
            "id": "/2022/04/06/",
            "content_html": "<p>とはいうものの、実際に作ったのはひと月ほど前だしサイト全体としては全然不完全なものなので、満足いっているかと云うとそうでもない。</p><p>シェアする際にパスが抜け落ちる不具合があるらしく、意気揚々と Twitter でシェアしたリンクが製作者のブログにしか通じていないとかいうホンマごめん案件もちらほら……（かくいうこの記事に辿り着いた人々もそれに該当するかもしれない）</p><p>実際に署名者検索ができるのは<a href=\"https://ningensei848.github.io/againstc/topic/open-letters/search\" target=\"_blank\" rel=\"noopener noreferrer\">こちら</a>です　 → <a href=\"https://ningensei848.github.io/againstc/topic/open-letters/search\" target=\"_blank\" rel=\"noopener noreferrer\">https://ningensei848.github.io/againstc/topic/open-letters/search</a></p><p>(※以下、蛇足というか解説というか雑感)</p><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"使い方\">使い方<a class=\"hash-link\" href=\"#使い方\" title=\"Direct link to heading\">​</a></h2><p><a href=\"https://note.com/ningensei848/n/n073d2768032a\" target=\"_blank\" rel=\"noopener noreferrer\">note</a> でもちょろっと書いたのだが、検索アプローチとして 2 種類が実装されている。\n一つが普通のキーワード検索、もう一つが「正規表現による高度な検索」である。</p><p><a href=\"https://note.com/ningensei848/n/n073d2768032a\" target=\"_blank\" rel=\"noopener noreferrer\">https://note.com/ningensei848/n/n073d2768032a</a></p><p>この辺の切り替え UI がモバイル向けだとわかりにくかったのか、<em>KEYWORD</em> は読めても、<em>ADVANCED</em> を目に入れる人は少ないようだ。\nあるいは、\"タブで切り替える\" という UI がそもそも経験的に知っていないとわからないということなのかもしれない（いわゆるシグニファイアってやつがダメ？）</p><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"advanced\">ADVANCED<a class=\"hash-link\" href=\"#advanced\" title=\"Direct link to heading\">​</a></h3><p>Advanced 検索では以下の機能が実装されている：</p><ul><li>keyword ではなく regular expression をクエリとする</li><li>フォームを増やして複数のパターンを組み合わせられる</li><li>AND/OR の切り替えが可能</li><li>Exclude (除外検索)の切り替えが可能</li><li>結果のエクスポート</li></ul><p>もはや情報リテラシーが足りなかったあの頃の記憶は遠く彼方にあり、上記の短文解説以上になにを語ればいいのかわからない。\nこのような機能があります、ぜひ必要に応じて生かしてください、以上……</p><p>で、投げるのも無責任なので、検索事例集として note を書こうと思う。</p><p>→ 書きました：　<a href=\"https://note.com/ningensei848/n/n706121639edc\" target=\"_blank\" rel=\"noopener noreferrer\">https://note.com/ningensei848/n/n706121639edc</a></p><p>ぐだぐだ分かりにくく説明するよりも、実際に検索してみた具体例を見せた方が効果的だろう。\nまた、それを見て「自分でも使ってみるか」となることにも期待できる。</p><ul><li><a href=\"https://note.com/ningensei848/n/n706121639edc\" target=\"_blank\" rel=\"noopener noreferrer\">【オープンレター】署名者を雑に分析する【#againstc】</a></li></ul><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"雑感\">雑感<a class=\"hash-link\" href=\"#雑感\" title=\"Direct link to heading\">​</a></h2><p>2022/04/06 現在、オリジナルのオープンレターは非公開となってしまったけれど、おそらく年内には「紙媒体に何らかの形で記録を残すことを現在検討」していたのだから、なんらかの形でなんらかが出てくるのだろう。\nオープンレターそれ自体があんなにも無責任で他責的なものだったのだから、それをもとにした出版物もさぞ無責任なものが出てくることだろう（これは直喩的誹謗中傷ですか？）</p><p>そういうものに無批判 / 無思考に賛同していた署名者各位は、撤回の機会があったにも関わらずそれを見過ごして賛意を表明していたということで、今後も永遠にネットにその名が刻まれることでしょう……よかったですね〜〜（オープンレターは「正義」なので何の問題もないのですよぬ）</p>",
            "url": "https://ningensei848.github.io/2022/04/06/",
            "title": "【オープンレター】署名者を検索するツールをつくった【#againstc】",
            "summary": "とはいうものの、実際に作ったのはひと月ほど前だしサイト全体としては全然不完全なものなので、満足いっているかと云うとそうでもない。",
            "date_modified": "2022-04-06T00:00:00.000Z",
            "author": {
                "name": "Kiai",
                "url": "https://twitter.com/Ningensei848"
            },
            "tags": [
                "オープンレター",
                "キャンセルカルチャー"
            ]
        },
        {
            "id": "/2022/04/01/",
            "content_html": "<p>というわけで、この記事の投稿は粉骨砕身、iPad 経由で頑張った記録となります。</p><p>探せば色々あるんだなぁ……</p><p>バイト先で貸与されていた pc を先月末付で返却し、手元には iPad しかないという状況に陥りました。\nこれまで使用していた開発環境すべてを失ったことになります（悲しい）</p><p>が、次の pc を用意することがまだできていません。\n金銭的な問題でもあるし、自業自得でもあるかもしれません。</p><p>でもずっとソシャゲをやっているばかりでは何も進まないし、なにより職を得るためになんらか成果物を作ってみせるということができる環境は少なくとも欲しいです。\nというわけで、iPad だけでもどうにかならないか検討しました（2022 年 4 月時点）</p><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"よさそうなアプローチ\">よさそうなアプローチ<a class=\"hash-link\" href=\"#よさそうなアプローチ\" title=\"Direct link to heading\">​</a></h2><p>いくつかよさそうなアプローチがあることは分かった</p><ul><li><a href=\"https://github.com/coder/code-server\" target=\"_blank\" rel=\"noopener noreferrer\"><code>code-server</code></a> によるセルフホスト</li><li><a href=\"https://vscode.dev\" target=\"_blank\" rel=\"noopener noreferrer\"><strong>vscode.dev</strong></a></li><li><a href=\"https://github.co.jp/features/codespaces\" target=\"_blank\" rel=\"noopener noreferrer\"><code>GitHub codespaces</code></a></li></ul><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"code-server\">code-server<a class=\"hash-link\" href=\"#code-server\" title=\"Direct link to heading\">​</a></h3><p>vscode を vps 上に置いて、そこへ SSH 接続してつかうありふれた方式のものであるようだ。\n他と違い、こちらは vscode や GitHub との公式な関わりはなく（？）コミュニティベースで開発されている気がする。</p><p>vps 環境が自分で選べるので、はちゃめちゃに大容量が必要とかマシンパワーがモリモリにしたいという用途だと，こちらも上がるかもしれない。\nが、手軽さという視点では codespace でいいじゃんとなるかも…</p><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"vscodedev\">vscode.dev<a class=\"hash-link\" href=\"#vscodedev\" title=\"Direct link to heading\">​</a></h3><p>この記事を編集しているのも、実はこの vscode.dev 上である。</p><p>対応しているブラウザであれば、上部の検索バーに \"vscode.dev\" と打ち込むだけでブラウザ版の vscode 画面が開かれる。\n左上のハンバーガーメニューから \"open remote repository\" を選択し、GitHub のアカウントとの連携を済ませれば、いつもの通りの画面でリポジトリを開くことができるのがわかるだろう。</p><p>違和感はほとんどなくだいぶ快適に使えるが、肝心の Terminal 機能がさっぱり使えない。\n「使用感が悪い」とかではなく、機能として実装されていない。\nまぁそれはすべてブラウザ上で動いているから当然といえば当然で、こちらの機能も使いたい場合は codespace に課金することになるだろう。</p><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"github-codespaces\">GitHub CodeSpaces<a class=\"hash-link\" href=\"#github-codespaces\" title=\"Direct link to heading\">​</a></h3><p>これまでに述べてきた二つのアプローチを兼ね備えた現状最強の方法である。</p><p>……ということまではわかっているのだが、まだ個人相手にはパブリックになっていないようだ。</p><p><a href=\"https://github.co.jp/features/codespaces\" target=\"_blank\" rel=\"noopener noreferrer\">https://github.co.jp/features/codespaces</a></p><p>さっそくベータ版に申し込んだ。\nいつぐらいから使えるようになるだろうか？\nベータに参加する個人相手には現状課金しないようなので、うまいこと試せればいいのだが……</p><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"まとめ\">まとめ<a class=\"hash-link\" href=\"#まとめ\" title=\"Direct link to heading\">​</a></h2><p>無論、 pc が手元にあればこんなに苦労する必要はなく、素直に VSCode をインストールすればよいだけである。\n敢えて自前の pc から codespace を使うとすれば、潤沢なリソースを持った環境でコードの実行・編集を行いたい場合とか、リポジトリがそもそもデカ過ぎてローカルに持ってくるだけで一苦労とか、そういう限られた用途になるだろう。</p>",
            "url": "https://ningensei848.github.io/2022/04/01/",
            "title": "貸与PCを返却して手元にはiPadしか残されていねぇ",
            "summary": "というわけで、この記事の投稿は粉骨砕身、iPad 経由で頑張った記録となります。",
            "date_modified": "2022-04-01T00:00:00.000Z",
            "author": {
                "name": "Kiai",
                "url": "https://twitter.com/Ningensei848"
            },
            "tags": [
                "日記",
                "奮闘記"
            ]
        },
        {
            "id": "/2022/03/30/",
            "content_html": "<p>まだ zenn.dev に記事としてまとめることは出来ていないが，着々と自動化処理が作成できてきた．</p><p>一方で，エラーに関してもエッジケースが現れたのでその例外処理もプチプチやっていく．</p><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"自動化処理\">自動化処理<a class=\"hash-link\" href=\"#自動化処理\" title=\"Direct link to heading\">​</a></h2><p><code>dailyUpdate.py</code> をメインプログラムとして実行するのではなく，反復処理の一部として実行する．\nすなわち，<del>元日から大晦日まで一日ずつ</del> 大晦日から元日まで一日ずつ<sup id=\"fnref-1-2d8924\"><a href=\"#fn-1-2d8924\" class=\"footnote-ref\">1</a></sup> <code>dailyUpdate.py</code> に渡して 365 日処理ができるようにする．</p><div class=\"language-python codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#393A34;--prism-background-color:#f6f8fa\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-python codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">firstDay </span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\"> date</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token number\" style=\"color:#36acaa\">2021</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> </span><span class=\"token number\" style=\"color:#36acaa\">12</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> </span><span class=\"token number\" style=\"color:#36acaa\">31</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">today </span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\"> firstDay</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">loop_size </span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\"> </span><span class=\"token number\" style=\"color:#36acaa\">365</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"color:#00009f\">for</span><span class=\"token plain\"> loop </span><span class=\"token keyword\" style=\"color:#00009f\">in</span><span class=\"token plain\"> </span><span class=\"token builtin\">range</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\">loop_size</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">:</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token keyword\" style=\"color:#00009f\">print</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token string\" style=\"color:#e3116c\">\"now is \"</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> today</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    targetDate </span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\"> </span><span class=\"token builtin\">sum</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token punctuation\" style=\"color:#393A34\">[</span><span class=\"token plain\">today</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token plain\">year </span><span class=\"token operator\" style=\"color:#393A34\">*</span><span class=\"token plain\"> </span><span class=\"token number\" style=\"color:#36acaa\">10</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:#393A34\">**</span><span class=\"token plain\"> </span><span class=\"token number\" style=\"color:#36acaa\">4</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> today</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token plain\">month </span><span class=\"token operator\" style=\"color:#393A34\">*</span><span class=\"token plain\"> </span><span class=\"token number\" style=\"color:#36acaa\">10</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:#393A34\">**</span><span class=\"token plain\"> </span><span class=\"token number\" style=\"color:#36acaa\">2</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> today</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token plain\">day</span><span class=\"token punctuation\" style=\"color:#393A34\">]</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    updateDaily</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\">targetDate</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\">  </span><span class=\"token comment\" style=\"color:#999988;font-style:italic\"># int(YYYYMMDD) を渡す</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    today </span><span class=\"token operator\" style=\"color:#393A34\">-=</span><span class=\"token plain\"> timedelta</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\">days</span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token number\" style=\"color:#36acaa\">1</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg class=\"copyButtonIcon_y97N\" viewBox=\"0 0 24 24\"><path d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg class=\"copyButtonSuccessIcon_LjdS\" viewBox=\"0 0 24 24\"><path d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"こまめにコミット\">こまめにコミット<a class=\"hash-link\" href=\"#こまめにコミット\" title=\"Direct link to heading\">​</a></h3><p>また，一年分も処理をすると得られるデータ数が膨大なものとなり，あとでコミットするのに支障をきたすかもしれない．\nそのため，一週間ごとにこまめにコミットさせる．</p><div class=\"language-python codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#393A34;--prism-background-color:#f6f8fa\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-python codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token keyword\" style=\"color:#00009f\">def</span><span class=\"token plain\"> </span><span class=\"token function\" style=\"color:#d73a49\">makeCommands</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">:</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    dt </span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\"> datetime</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token plain\">now</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\">timezone</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\">timedelta</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\">hours</span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token number\" style=\"color:#36acaa\">9</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token plain\">strftime</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token string\" style=\"color:#e3116c\">\"%Y-%m-%d %H:%M:%S\"</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    git_add </span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">[</span><span class=\"token string\" style=\"color:#e3116c\">\"git\"</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">\"add\"</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">\".\"</span><span class=\"token punctuation\" style=\"color:#393A34\">]</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    git_commit </span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">[</span><span class=\"token string\" style=\"color:#e3116c\">\"git\"</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">\"commit\"</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">\"-m\"</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> </span><span class=\"token string-interpolation string\" style=\"color:#e3116c\">f\"Update: horse and race data || </span><span class=\"token string-interpolation interpolation punctuation\" style=\"color:#393A34\">{</span><span class=\"token string-interpolation interpolation\">dt</span><span class=\"token string-interpolation interpolation punctuation\" style=\"color:#393A34\">}</span><span class=\"token string-interpolation string\" style=\"color:#e3116c\">\"</span><span class=\"token punctuation\" style=\"color:#393A34\">]</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    git_gc </span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">[</span><span class=\"token string\" style=\"color:#e3116c\">\"git\"</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">\"gc\"</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">\"--prune=all\"</span><span class=\"token punctuation\" style=\"color:#393A34\">]</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    git_push </span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">[</span><span class=\"token string\" style=\"color:#e3116c\">\"git\"</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">\"push\"</span><span class=\"token punctuation\" style=\"color:#393A34\">]</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token keyword\" style=\"color:#00009f\">return</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">[</span><span class=\"token plain\">git_add</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> git_commit</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> git_gc</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> git_push</span><span class=\"token punctuation\" style=\"color:#393A34\">]</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"color:#00009f\">def</span><span class=\"token plain\"> </span><span class=\"token function\" style=\"color:#d73a49\">gitCommit</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">:</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token keyword\" style=\"color:#00009f\">for</span><span class=\"token plain\"> proc </span><span class=\"token keyword\" style=\"color:#00009f\">in</span><span class=\"token plain\"> makeCommands</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">:</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        subprocess</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token plain\">run</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\">proc</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> encoding</span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token string\" style=\"color:#e3116c\">\"utf-8\"</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> stdout</span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\">subprocess</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token plain\">PIPE</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg class=\"copyButtonIcon_y97N\" viewBox=\"0 0 24 24\"><path d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg class=\"copyButtonSuccessIcon_LjdS\" viewBox=\"0 0 24 24\"><path d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><div class=\"language-python codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#393A34;--prism-background-color:#f6f8fa\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-python codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">firstDay </span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\"> date</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token number\" style=\"color:#36acaa\">2021</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> </span><span class=\"token number\" style=\"color:#36acaa\">12</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> </span><span class=\"token number\" style=\"color:#36acaa\">31</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">today </span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\"> firstDay</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">loop_size </span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\"> </span><span class=\"token number\" style=\"color:#36acaa\">365</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"color:#00009f\">for</span><span class=\"token plain\"> loop </span><span class=\"token keyword\" style=\"color:#00009f\">in</span><span class=\"token plain\"> </span><span class=\"token builtin\">range</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\">loop_size</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">:</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token keyword\" style=\"color:#00009f\">print</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token string\" style=\"color:#e3116c\">\"now is \"</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> today</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    targetDate </span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\"> </span><span class=\"token builtin\">sum</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token punctuation\" style=\"color:#393A34\">[</span><span class=\"token plain\">today</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token plain\">year </span><span class=\"token operator\" style=\"color:#393A34\">*</span><span class=\"token plain\"> </span><span class=\"token number\" style=\"color:#36acaa\">10</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:#393A34\">**</span><span class=\"token plain\"> </span><span class=\"token number\" style=\"color:#36acaa\">4</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> today</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token plain\">month </span><span class=\"token operator\" style=\"color:#393A34\">*</span><span class=\"token plain\"> </span><span class=\"token number\" style=\"color:#36acaa\">10</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:#393A34\">**</span><span class=\"token plain\"> </span><span class=\"token number\" style=\"color:#36acaa\">2</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> today</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token plain\">day</span><span class=\"token punctuation\" style=\"color:#393A34\">]</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    updateDaily</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\">targetDate</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\">  </span><span class=\"token comment\" style=\"color:#999988;font-style:italic\"># int(YYYYMMDD) を渡す</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    today </span><span class=\"token operator\" style=\"color:#393A34\">-=</span><span class=\"token plain\"> timedelta</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\">days</span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token number\" style=\"color:#36acaa\">1</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token comment\" style=\"color:#999988;font-style:italic\"># こまめにコミット</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token keyword\" style=\"color:#00009f\">if</span><span class=\"token plain\"> loop </span><span class=\"token operator\" style=\"color:#393A34\">%</span><span class=\"token plain\"> </span><span class=\"token number\" style=\"color:#36acaa\">7</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:#393A34\">==</span><span class=\"token plain\"> </span><span class=\"token number\" style=\"color:#36acaa\">6</span><span class=\"token punctuation\" style=\"color:#393A34\">:</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        gitCommit</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg class=\"copyButtonIcon_y97N\" viewBox=\"0 0 24 24\"><path d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg class=\"copyButtonSuccessIcon_LjdS\" viewBox=\"0 0 24 24\"><path d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"ファイルの存在判定重複リクエストをなくす\">ファイルの存在判定（重複リクエストをなくす）<a class=\"hash-link\" href=\"#ファイルの存在判定重複リクエストをなくす\" title=\"Direct link to heading\">​</a></h3><p>さらに，処理を高速化するために既存のファイルの有無によってリクエストを減らす．\n<code>horse_id</code> によってディレクトリ構造および HTTP リクエストが管理されているが，<a href=\"https://docs.python.org/ja/3/library/pathlib.html\" target=\"_blank\" rel=\"noopener noreferrer\"><code>pathlib</code></a> によってこの ID を持つファイルへのパスオブジェクトを作成し，<code>Path.exists()</code> で存在を確認する．\nファイルが無い場合に絞ってリクエストを行えば，処理が繰り返されるたびに 1 ループに必要な時間は減っていくことだろう．</p><div class=\"language-python codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#393A34;--prism-background-color:#f6f8fa\"><div class=\"codeBlockTitle_Ktv7\">filter.py</div><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-python codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token keyword\" style=\"color:#00009f\">from</span><span class=\"token plain\"> pathlib </span><span class=\"token keyword\" style=\"color:#00009f\">import</span><span class=\"token plain\"> Path</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">cwd </span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\"> Path</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token plain\">cwd</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"color:#00009f\">def</span><span class=\"token plain\"> </span><span class=\"token function\" style=\"color:#d73a49\">getHorsePath</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\">horse_id</span><span class=\"token punctuation\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token builtin\">str</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> </span><span class=\"token builtin\">dir</span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token string\" style=\"color:#e3116c\">\"json\"</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:#393A34\">-</span><span class=\"token operator\" style=\"color:#393A34\">&gt;</span><span class=\"token plain\"> Path</span><span class=\"token punctuation\" style=\"color:#393A34\">:</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    yyyy</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> xxxx</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> zz </span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\"> horse_id</span><span class=\"token punctuation\" style=\"color:#393A34\">[</span><span class=\"token punctuation\" style=\"color:#393A34\">:</span><span class=\"token number\" style=\"color:#36acaa\">4</span><span class=\"token punctuation\" style=\"color:#393A34\">]</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> horse_id</span><span class=\"token punctuation\" style=\"color:#393A34\">[</span><span class=\"token number\" style=\"color:#36acaa\">4</span><span class=\"token punctuation\" style=\"color:#393A34\">:</span><span class=\"token number\" style=\"color:#36acaa\">8</span><span class=\"token punctuation\" style=\"color:#393A34\">]</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> horse_id</span><span class=\"token punctuation\" style=\"color:#393A34\">[</span><span class=\"token number\" style=\"color:#36acaa\">8</span><span class=\"token punctuation\" style=\"color:#393A34\">:</span><span class=\"token punctuation\" style=\"color:#393A34\">]</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    filepath </span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\"> cwd </span><span class=\"token operator\" style=\"color:#393A34\">/</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">\"data\"</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:#393A34\">/</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">\"horse\"</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:#393A34\">/</span><span class=\"token plain\"> </span><span class=\"token builtin\">dir</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:#393A34\">/</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">\"profile\"</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:#393A34\">/</span><span class=\"token plain\"> yyyy </span><span class=\"token operator\" style=\"color:#393A34\">/</span><span class=\"token plain\"> xxxx </span><span class=\"token operator\" style=\"color:#393A34\">/</span><span class=\"token plain\"> </span><span class=\"token string-interpolation string\" style=\"color:#e3116c\">f\"</span><span class=\"token string-interpolation interpolation punctuation\" style=\"color:#393A34\">{</span><span class=\"token string-interpolation interpolation\">zz</span><span class=\"token string-interpolation interpolation punctuation\" style=\"color:#393A34\">}</span><span class=\"token string-interpolation string\" style=\"color:#e3116c\">.json\"</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token keyword\" style=\"color:#00009f\">return</span><span class=\"token plain\"> filepath</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"color:#00009f\">def</span><span class=\"token plain\"> </span><span class=\"token function\" style=\"color:#d73a49\">filteringDuplicated</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\">horse_list</span><span class=\"token punctuation\" style=\"color:#393A34\">:</span><span class=\"token plain\"> List</span><span class=\"token punctuation\" style=\"color:#393A34\">[</span><span class=\"token builtin\">str</span><span class=\"token punctuation\" style=\"color:#393A34\">]</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:#393A34\">-</span><span class=\"token operator\" style=\"color:#393A34\">&gt;</span><span class=\"token plain\"> List</span><span class=\"token punctuation\" style=\"color:#393A34\">[</span><span class=\"token builtin\">str</span><span class=\"token punctuation\" style=\"color:#393A34\">]</span><span class=\"token punctuation\" style=\"color:#393A34\">:</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    unregistered_horse_id </span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">[</span><span class=\"token plain\">horse_id </span><span class=\"token keyword\" style=\"color:#00009f\">for</span><span class=\"token plain\"> horse_id </span><span class=\"token keyword\" style=\"color:#00009f\">in</span><span class=\"token plain\"> horse_list </span><span class=\"token keyword\" style=\"color:#00009f\">if</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:#00009f\">not</span><span class=\"token plain\"> getHorsePath</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\">horse_id</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token plain\">exists</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">]</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token keyword\" style=\"color:#00009f\">return</span><span class=\"token plain\"> unregistered_horse_id</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg class=\"copyButtonIcon_y97N\" viewBox=\"0 0 24 24\"><path d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg class=\"copyButtonSuccessIcon_LjdS\" viewBox=\"0 0 24 24\"><path d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"unicodedecodeerror\"><code>UnicodeDecodeError</code><a class=\"hash-link\" href=\"#unicodedecodeerror\" title=\"Direct link to heading\">​</a></h2><div class=\"language-python codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#393A34;--prism-background-color:#f6f8fa\"><div class=\"codeBlockTitle_Ktv7\">UnicodeDecodeError: 'euc_jp' codec can't decode byte 0xf9</div><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-python codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">Traceback </span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\">most recent call last</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">:</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">  File </span><span class=\"token string\" style=\"color:#e3116c\">\"python/temp.py\"</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> line </span><span class=\"token number\" style=\"color:#36acaa\">36</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:#00009f\">in</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:#393A34\">&lt;</span><span class=\"token plain\">module</span><span class=\"token operator\" style=\"color:#393A34\">&gt;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    updateDaily</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\">targetDate</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">  File </span><span class=\"token string\" style=\"color:#e3116c\">\"/path/to/ML4Keiba/python/dailyUpdate.py\"</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> line </span><span class=\"token number\" style=\"color:#36acaa\">65</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:#00009f\">in</span><span class=\"token plain\"> main</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    processHorseData</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\">horse_list</span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\">horse_list</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> limit</span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\">PARALLEL_LIMIT</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">  File </span><span class=\"token string\" style=\"color:#e3116c\">\"/path/to/ML4Keiba/python/getHorseProfile.py\"</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> line </span><span class=\"token number\" style=\"color:#36acaa\">503</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:#00009f\">in</span><span class=\"token plain\"> main</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    loop</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token plain\">run_until_complete</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\">_run</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\">horse_list</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> coro</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> limit</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">  File </span><span class=\"token string\" style=\"color:#e3116c\">\"/usr/lib/python3.8/asyncio/base_events.py\"</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> line </span><span class=\"token number\" style=\"color:#36acaa\">616</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:#00009f\">in</span><span class=\"token plain\"> run_until_complete</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token keyword\" style=\"color:#00009f\">return</span><span class=\"token plain\"> future</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token plain\">result</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">  File </span><span class=\"token string\" style=\"color:#e3116c\">\"/path/to/ML4Keiba/python/getHorseProfile.py\"</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> line </span><span class=\"token number\" style=\"color:#36acaa\">491</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:#00009f\">in</span><span class=\"token plain\"> _run</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    responses </span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:#00009f\">await</span><span class=\"token plain\"> tqdm</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token plain\">gather</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token operator\" style=\"color:#393A34\">*</span><span class=\"token plain\">tasks</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\">  </span><span class=\"token comment\" style=\"color:#999988;font-style:italic\"># wrapper for asyncio.gather</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">  File </span><span class=\"token string\" style=\"color:#e3116c\">\"/path/to/ML4Keiba/.venv/lib/python3.8/site-packages/tqdm/asyncio.py\"</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> line </span><span class=\"token number\" style=\"color:#36acaa\">79</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:#00009f\">in</span><span class=\"token plain\"> gather</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    res </span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">[</span><span class=\"token keyword\" style=\"color:#00009f\">await</span><span class=\"token plain\"> f </span><span class=\"token keyword\" style=\"color:#00009f\">for</span><span class=\"token plain\"> f </span><span class=\"token keyword\" style=\"color:#00009f\">in</span><span class=\"token plain\"> cls</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token plain\">as_completed</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\">ifs</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> loop</span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\">loop</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> timeout</span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\">timeout</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">  File </span><span class=\"token string\" style=\"color:#e3116c\">\"/path/to/ML4Keiba/.venv/lib/python3.8/site-packages/tqdm/asyncio.py\"</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> line </span><span class=\"token number\" style=\"color:#36acaa\">79</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:#00009f\">in</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:#393A34\">&lt;</span><span class=\"token plain\">listcomp</span><span class=\"token operator\" style=\"color:#393A34\">&gt;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    res </span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">[</span><span class=\"token keyword\" style=\"color:#00009f\">await</span><span class=\"token plain\"> f </span><span class=\"token keyword\" style=\"color:#00009f\">for</span><span class=\"token plain\"> f </span><span class=\"token keyword\" style=\"color:#00009f\">in</span><span class=\"token plain\"> cls</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token plain\">as_completed</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\">ifs</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> loop</span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\">loop</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> timeout</span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\">timeout</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">  File </span><span class=\"token string\" style=\"color:#e3116c\">\"/usr/lib/python3.8/asyncio/tasks.py\"</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> line </span><span class=\"token number\" style=\"color:#36acaa\">619</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:#00009f\">in</span><span class=\"token plain\"> _wait_for_one</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token keyword\" style=\"color:#00009f\">return</span><span class=\"token plain\"> f</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token plain\">result</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\">  </span><span class=\"token comment\" style=\"color:#999988;font-style:italic\"># May raise f.exception().</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">  File </span><span class=\"token string\" style=\"color:#e3116c\">\"/path/to/ML4Keiba/.venv/lib/python3.8/site-packages/tqdm/asyncio.py\"</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> line </span><span class=\"token number\" style=\"color:#36acaa\">76</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:#00009f\">in</span><span class=\"token plain\"> wrap_awaitable</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token keyword\" style=\"color:#00009f\">return</span><span class=\"token plain\"> i</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:#00009f\">await</span><span class=\"token plain\"> f</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">  File </span><span class=\"token string\" style=\"color:#e3116c\">\"/path/to/ML4Keiba/python/getHorseProfile.py\"</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> line </span><span class=\"token number\" style=\"color:#36acaa\">468</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:#00009f\">in</span><span class=\"token plain\"> _bound_fetch</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token keyword\" style=\"color:#00009f\">return</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:#00009f\">await</span><span class=\"token plain\"> _fetch</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\">session</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> horse_id</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> coro</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">  File </span><span class=\"token string\" style=\"color:#e3116c\">\"/path/to/ML4Keiba/python/getHorseProfile.py\"</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> line </span><span class=\"token number\" style=\"color:#36acaa\">455</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:#00009f\">in</span><span class=\"token plain\"> _fetch</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token keyword\" style=\"color:#00009f\">return</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:#00009f\">await</span><span class=\"token plain\"> coro</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\">horse_id</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> res_top</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> res_ped</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">  File </span><span class=\"token string\" style=\"color:#e3116c\">\"/path/to/ML4Keiba/python/getHorseProfile.py\"</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> line </span><span class=\"token number\" style=\"color:#36acaa\">407</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:#00009f\">in</span><span class=\"token plain\"> coroutine</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    content_top </span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:#00009f\">await</span><span class=\"token plain\"> res_top</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token plain\">text</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\">encoding</span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\">ENCODING</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">  File </span><span class=\"token string\" style=\"color:#e3116c\">\"/path/to/ML4Keiba/.venv/lib/python3.8/site-packages/aiohttp/client_reqrep.py\"</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> line </span><span class=\"token number\" style=\"color:#36acaa\">1085</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:#00009f\">in</span><span class=\"token plain\"> text</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token keyword\" style=\"color:#00009f\">return</span><span class=\"token plain\"> self</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token plain\">_body</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token plain\">decode</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\">  </span><span class=\"token comment\" style=\"color:#999988;font-style:italic\"># type: ignore[no-any-return,union-attr]</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">UnicodeDecodeError</span><span class=\"token punctuation\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">'euc_jp'</span><span class=\"token plain\"> codec can't decode byte </span><span class=\"token number\" style=\"color:#36acaa\">0xf9</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:#00009f\">in</span><span class=\"token plain\"> position </span><span class=\"token number\" style=\"color:#36acaa\">26711</span><span class=\"token punctuation\" style=\"color:#393A34\">:</span><span class=\"token plain\"> illegal multibyte sequence</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg class=\"copyButtonIcon_y97N\" viewBox=\"0 0 24 24\"><path d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg class=\"copyButtonSuccessIcon_LjdS\" viewBox=\"0 0 24 24\"><path d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>リクエストをバイナリデータから <code>euc-jp</code> で読み込むときに，「<strong>髙﨑</strong>」が悪さをして <code>UnicodeDecodeError</code> が起きてしまった．</p><p><a href=\"https://qiita.com/inoory/items/aafe79384dbfcc0802cf#%E3%82%A8%E3%83%A9%E3%83%BC%E3%83%8F%E3%83%B3%E3%83%89%E3%83%A9%E3%82%92%E6%8C%87%E5%AE%9A%E3%81%97%E3%81%9F%E3%81%A8%E3%81%8D%E3%81%AE%E3%83%87%E3%82%B3%E3%83%BC%E3%83%89%E7%B5%90%E6%9E%9C\" target=\"_blank\" rel=\"noopener noreferrer\">https://qiita.com/inoory/items/aafe79384dbfcc0802cf#エラーハンドラを指定したときのデコード結果</a></p><p>いろいろ試したところ，<code>surrogateescape</code> だとうまくいくときとそうでない場合があるようだ．\n一方で <code>backslashreplace</code> だと常に成功するが，<code>\\\\xe3\\\\x81\\\\xb2\\\\xe3\\\\x82\\\\x89\\\\xe3\\\\x82</code> のような表記がデータ上に残ってしまう．</p><p>現状，うまく回避する方法が（自分では）よくわかっていないため，<code>try-except</code> 構文でエラーが起きるたびそれを回避する方法を取ることとする．</p><div class=\"language-python codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#393A34;--prism-background-color:#f6f8fa\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-python codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">content_top </span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:#00009f\">await</span><span class=\"token plain\"> res_top</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token plain\">text</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\">encoding</span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\">ENCODING</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> errors</span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token string\" style=\"color:#e3116c\">\"surrogateescape\"</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">content_ped </span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:#00009f\">await</span><span class=\"token plain\"> res_ped</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token plain\">text</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\">encoding</span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\">ENCODING</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> errors</span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token string\" style=\"color:#e3116c\">\"surrogateescape\"</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"color:#00009f\">try</span><span class=\"token punctuation\" style=\"color:#393A34\">:</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    meta </span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\"> getHorseMeta</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\">BeautifulSoup</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\">content_top</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">\"lxml\"</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"color:#00009f\">except</span><span class=\"token plain\"> Exception </span><span class=\"token keyword\" style=\"color:#00009f\">as</span><span class=\"token plain\"> e</span><span class=\"token punctuation\" style=\"color:#393A34\">:</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token keyword\" style=\"color:#00009f\">print</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\">e</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> </span><span class=\"token builtin\">file</span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\">sys</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token plain\">stderr</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    content_top </span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:#00009f\">await</span><span class=\"token plain\"> res_top</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token plain\">text</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\">encoding</span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\">ENCODING</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> errors</span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token string\" style=\"color:#e3116c\">\"backslashreplace\"</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    meta </span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\"> getHorseMeta</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\">BeautifulSoup</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\">content_top</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">\"lxml\"</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">ped </span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\"> getHorsePed</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\">BeautifulSoup</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\">content_ped</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">\"lxml\"</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg class=\"copyButtonIcon_y97N\" viewBox=\"0 0 24 24\"><path d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg class=\"copyButtonSuccessIcon_LjdS\" viewBox=\"0 0 24 24\"><path d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p><a href=\"https://docs.python.org/ja/3/library/codecs.html#error-handlers\" target=\"_blank\" rel=\"noopener noreferrer\">codecs --- codec レジストリと基底クラス — Python 3.10.0b2 ドキュメント</a> とか <a href=\"https://imagawa.hatenadiary.jp/entry/2016/12/25/193000\" target=\"_blank\" rel=\"noopener noreferrer\">Python でサロゲートペア -- ほっけの逆襲 - 今川館</a> あたりが正解なんじゃあないかな～～と思いつつ，とりあえず現段階ではデータ収集を優先する．</p><p>あとになって余裕ができてからデータクレンジングを行えばよいだろう（ヨシッ！👈😹）</p><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"getid\"><code>getId()</code><a class=\"hash-link\" href=\"#getid\" title=\"Direct link to heading\">​</a></h2><p><code>getId()</code> で与えられた文字列から ID を引っこ抜いていたが，以外にもロバストネスが低いことがわかったため，処理を冗長化した．</p><p>正規表現を使うのもアリではあるのだが，プロバイダ側で ID の表記ルールを変更されたら追従しにくいため，別のアプローチを取った．</p><div class=\"language-python codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#393A34;--prism-background-color:#f6f8fa\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-python codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token keyword\" style=\"color:#00009f\">def</span><span class=\"token plain\"> </span><span class=\"token function\" style=\"color:#d73a49\">getId</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\">url</span><span class=\"token punctuation\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token builtin\">str</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:#393A34\">-</span><span class=\"token operator\" style=\"color:#393A34\">&gt;</span><span class=\"token plain\"> </span><span class=\"token builtin\">str</span><span class=\"token punctuation\" style=\"color:#393A34\">:</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token keyword\" style=\"color:#00009f\">if</span><span class=\"token plain\"> </span><span class=\"token builtin\">type</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\">url</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:#00009f\">is</span><span class=\"token plain\"> </span><span class=\"token builtin\">int</span><span class=\"token punctuation\" style=\"color:#393A34\">:</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        </span><span class=\"token keyword\" style=\"color:#00009f\">return</span><span class=\"token plain\"> </span><span class=\"token builtin\">str</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\">url</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token keyword\" style=\"color:#00009f\">if</span><span class=\"token plain\"> </span><span class=\"token builtin\">type</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\">url</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:#00009f\">is</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:#00009f\">not</span><span class=\"token plain\"> </span><span class=\"token builtin\">str</span><span class=\"token punctuation\" style=\"color:#393A34\">:</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        </span><span class=\"token keyword\" style=\"color:#00009f\">return</span><span class=\"token plain\"> </span><span class=\"token boolean\" style=\"color:#36acaa\">None</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    res </span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\"> url</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token plain\">strip</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token string\" style=\"color:#e3116c\">\"/\"</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token plain\">split</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token string\" style=\"color:#e3116c\">\"/\"</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">[</span><span class=\"token operator\" style=\"color:#393A34\">-</span><span class=\"token number\" style=\"color:#36acaa\">1</span><span class=\"token punctuation\" style=\"color:#393A34\">]</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token keyword\" style=\"color:#00009f\">if</span><span class=\"token plain\"> </span><span class=\"token builtin\">len</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\">res</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:#393A34\">&lt;</span><span class=\"token plain\"> </span><span class=\"token number\" style=\"color:#36acaa\">1</span><span class=\"token punctuation\" style=\"color:#393A34\">:</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        </span><span class=\"token keyword\" style=\"color:#00009f\">return</span><span class=\"token plain\"> </span><span class=\"token boolean\" style=\"color:#36acaa\">None</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    id_ </span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\"> res</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token plain\">split</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token string\" style=\"color:#e3116c\">\"=\"</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">[</span><span class=\"token operator\" style=\"color:#393A34\">-</span><span class=\"token number\" style=\"color:#36acaa\">1</span><span class=\"token punctuation\" style=\"color:#393A34\">]</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token keyword\" style=\"color:#00009f\">return</span><span class=\"token plain\"> id_</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg class=\"copyButtonIcon_y97N\" viewBox=\"0 0 24 24\"><path d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg class=\"copyButtonSuccessIcon_LjdS\" viewBox=\"0 0 24 24\"><path d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>とりあえず本日までの進捗はこんなところだろうか．</p><p>データクレンジングの課題については適宜 Issue を建てて後から参照して直すことになるだろう．\n未来の自分にぶん投げて申し訳ない……😢</p><div class=\"footnotes\"><hr><ol><li id=\"fn-1-2d8924\">遡っていくほうが，既知の ID と衝突しやすい（重複リクエストを減らしやすい）と考え直した（が，そこまでの違いはないかも？）<a href=\"#fnref-1-2d8924\" class=\"footnote-backref\">↩</a></li></ol></div>",
            "url": "https://ningensei848.github.io/2022/03/30/",
            "title": "netkeiba のデータをスクレイピングして LOD 化する（５）",
            "summary": "まだ zenn.dev に記事としてまとめることは出来ていないが，着々と自動化処理が作成できてきた．",
            "date_modified": "2022-03-30T00:00:00.000Z",
            "author": {
                "name": "Kiai",
                "url": "https://twitter.com/Ningensei848"
            },
            "tags": [
                "python",
                "スクレイピング",
                "競馬"
            ]
        },
        {
            "id": "/2022/03/28/",
            "content_html": "<p><a href=\"https://github.com/Ningensei848/ML4Keiba/blob/main/context.jsonld\" target=\"_blank\" rel=\"noopener noreferrer\"><code>JSON-LD</code> のコンテキスト</a>もどうにか定義し，半信半疑だった API Gateway を活用した<del>サーバ負荷回避</del> リクエスト制限の回避も実現できた．\nこれでようやくスクレピングによるデータ収集が始められる．</p><p>今回得た知見は，後ほど Zenn にまとめることとする．</p><p>全てのコードは <a href=\"https://github.com/Ningensei848/ML4Keiba\" target=\"_blank\" rel=\"noopener noreferrer\">Ningensei848/ML4Keiba</a> においてある．\nシンプルな Node.js プロジェクト内部に Poetry プロジェクトを同居させた構成となっている．</p><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"api-gateway-による多重リクエスト制限の回避\">API Gateway による多重リクエスト制限の回避<a class=\"hash-link\" href=\"#api-gateway-による多重リクエスト制限の回避\" title=\"Direct link to heading\">​</a></h2><p>DoS 攻撃としてよく知られているように，短時間に極めて大量のリクエストをサーバに送ることは，それだけで悪意ある攻撃と見做されても仕方がない．\nリクエストをさばくロードバランサやプロキシサーバがリクエスト送信者の同一性を検知し，一定量を超えるとそれ以上応答が帰ってこなくなる．\nこのような事態に陥ると，一定時間を待機すれば制限が解除される場合もあれば，永遠にその IP からはアクセスできなくなるという場合もある．</p><p>これがすなわち何らかの刑事罰に直結するというわけではないが，機械的なリクエストはあくまでジェントルに，悪意の有無に関わらず利己的な操作はすぐに排除されるものだと心に刻んでスクリプトを組まねばならない．</p><p>が，逆説的に，IP が同一のものでなければシャットダウンする理由はない．\n別の IP からのリクエストを見比べて，それが同一のユーザから送られたものであると判断するには材料が足りないし，なによりすべてのリクエストに対してそんな処理を挟む余裕もない．</p><p>俗に「IP アドレスローテーション」とかいう work around らしい．</p><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"cloud-functions-gen2-を生やして-gateway-でまとめる\">Cloud Functions (Gen2) を生やして Gateway でまとめる<a class=\"hash-link\" href=\"#cloud-functions-gen2-を生やして-gateway-でまとめる\" title=\"Direct link to heading\">​</a></h3><p>プロキシサーバを用意する……というとなんか難しそうな，フロントエンド人類には大変厳しい世界が待っていそうな気配がする．\nと思われたのもつかの間，Google Cloud Functions をつかってリクエストを代理させるエンドポイントを用意し，大量のエンドポイント URL に対して API Gateway で一つにまとめてやればよいことに気がついた．</p><p>もちろん，コンソール画面でポチポチするのは大変厳しい．それが GUI の限界である．\nしかし，GCP には <a href=\"https://cloud.google.com/sdk/docs\" target=\"_blank\" rel=\"noopener noreferrer\">Cloud SDK</a> が用意されており，そのうち <a href=\"https://cloud.google.com/sdk/gcloud\" target=\"_blank\" rel=\"noopener noreferrer\">gcloud CLI</a> を使えば上記操作が半自動化できる．</p><hr><p>というわけで用意したのが <a href=\"https://github.com/Ningensei848/ML4Keiba/tree/main/src\" target=\"_blank\" rel=\"noopener noreferrer\">こちら</a> である．</p><p><code>index.ts</code> は実際に Function としてデプロイされるスクリプトだ．\n単にクエリパラメータを読んで，そこに含まれた URL にリクエストを投げ，返ってきたデータをそのままこちらへ返してくれる．</p><p><code>deploy.ts</code> と <code>openapi.ts</code> は，ローカルで Cloud Functions と API Gateway に関する諸々の処理を全部やってくれるスクリプトだ．\n<code>namelist.txt</code> に書き連ねたエントリポイントを元に Functions を生やし，その情報をもとに <code>openapi.yaml</code> を作成する．</p><p>と，上記の処理はすべて <code>npm run exec:all --name=NAME --project=projectName</code> で実行できるように NPM スクリプトに書いてある．\nこれを有効化するために <code>npm run gateway:describe:api --name=NAME --project=projectName</code> で API インスタンスの URI を入手し，<code>gcloud services enable my-api-123abc456def1.apigateway.my-project.cloud.goog</code> で有効化すれば完了だ．</p><p>この実行が完了したら，<code>npm run gateway:describe --name=NAME --project=projectName</code> で実際に作成されたエンドポイントの情報を得られる．\n<code>namelist.txt</code> に書き連ねた名前の分だけ Cloud Functions に関数がデプロイされ，エントリポイントが生える．\n実際に Python 等でスクレイピングする際には，この <code>namelist.txt</code> からパスを作成し，エンドポイントを叩く際にそのパスを参照させればよい．</p><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"データ構造とディレクトリ構成\">データ構造とディレクトリ構成<a class=\"hash-link\" href=\"#データ構造とディレクトリ構成\" title=\"Direct link to heading\">​</a></h2><p>集めたデータはすべて <code>/date</code> 以下に置いた．\nGitHub のリポジトリ容量制限に引っかかるかもしれないな～～と思いつつ，流石にそこまでは肥大化しないだろうと高を括っている．</p><p>現段階では，主に <code>horse</code>, <code>race</code> で大分類を行なった．\n将来的には，<code>jockey</code>, <code>trainer</code> , <code>owner</code>, <code>breeder</code> のディレクトリをつくることになるだろう．</p><p>その直下には，<code>csv</code>, <code>json</code>, <code>list</code> といったデータの構造に関するディレクトリ構成としたが，これは冗長だしわかりにくいかもしれない．\n二度手間ではあるが，この階層は消して，すぐ直下に <code>YYYY</code> 等が置かれるように変更するかもしれない．</p><p><a href=\"/2022/03/23#%E3%83%87%E3%83%BC%E3%82%BF%E6%A7%8B%E9%80%A0\">前回の記事</a> で検討したように，<strong>各馬ごとに一ファイルを割り当てる方針</strong> でディレクトリをつくる．\n馬自身の血統やその他プロフ，戦績等は <code>horse_id</code> に紐づいているから，これを分割してやるのが都合が良い．\n<code>YYYY</code> で生年，<code>XXXX</code> で小分類，<code>ZZ.tsv</code> とすることで，各小分類には最大でも 100 ファイル程度しか格納されないようにした（ただし，ID に数字以外が含まれている場合は，この限りではない）．同様にレース情報も <code>race_id</code> に紐づくようにした．</p><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"毎日決まった時間にデータを更新\">毎日決まった時間にデータを更新<a class=\"hash-link\" href=\"#毎日決まった時間にデータを更新\" title=\"Direct link to heading\">​</a></h2><p>GitHub Actions でスクレイピングを実行する．\nリクエストの大元の送信者が IP で BAN されるとは考えにくいし，負荷分散をやったことで現実的な時間で処理を終えることができる．</p><p>サラッと流したが，スクレイピングを実際に行なう Python コードは<a href=\"https://github.com/Ningensei848/ML4Keiba/tree/main/python\" target=\"_blank\" rel=\"noopener noreferrer\">こちら</a>においてある．\n負荷分散を効率よく行なうために，HTTP リクエストのデファクトスタンダードであった <code>requests</code> を使うのではなく，<a href=\"https://docs.aiohttp.org/\" target=\"_blank\" rel=\"noopener noreferrer\"><code>aiohttp</code></a> を採用した．</p><p>また，実装には<a href=\"https://gist.github.com/rhoboro/86629f831934827d832841709abfe715\" target=\"_blank\" rel=\"noopener noreferrer\">asyncio, aiohttp を利用した並列処理のサンプルコード | GitHub Gist</a> を大いに参考にした．\n<code>coroutine()</code> という url, response を受け取る任意のコルーチン（並列実行したい処理を行なう関数（？））を定義するだけで使えることがわかるだろう．</p><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"まとめ\">まとめ<a class=\"hash-link\" href=\"#まとめ\" title=\"Direct link to heading\">​</a></h2><p>※<code>JSON-LD</code> について触れていないのは，いまのところその定義に自信が持てていないからだ．\n間違っている可能性も大いにあるため，今の段階では言及しない．</p><p>これまで，</p><ul><li>Cloud Functions</li><li>API Gateway</li><li>ディレクトリ構成の検討</li><li>スクレイピング</li></ul><p>をやってきた．</p><p>どうにかベースとなるデータはきれいに集まりそうである．\nが，まだまだそれはシード値として使えるというだけで，まったく全体を網羅することは出来ていない．\n特に，血統情報が重要なのはわかりきっているのに，いまだ子だけで，父母，祖父母……について遡ることは出来ていない．\n血統を遡ってスクレイピングするのは非常に手間がかかるであろうことはわかるので，またおいおいやっていく．</p><p>また次回 ✋</p>",
            "url": "https://ningensei848.github.io/2022/03/28/",
            "title": "netkeiba のデータをスクレイピングして LOD 化する（４）",
            "summary": "JSON-LD のコンテキストもどうにか定義し，半信半疑だった API Gateway を活用したサーバ負荷回避 リクエスト制限の回避も実現できた．",
            "date_modified": "2022-03-28T00:00:00.000Z",
            "author": {
                "name": "Kiai",
                "url": "https://twitter.com/Ningensei848"
            },
            "tags": [
                "python",
                "スクレイピング",
                "競馬"
            ]
        },
        {
            "id": "/2022/03/23/",
            "content_html": "<p>前回はスクレイピング効率を高めるためにプロキシサーバを作ろうという試みを行なって終わった．\n今回は具体的にどのようにデータを集めるか検討する．</p><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"race_id\"><code>race_id</code><a class=\"hash-link\" href=\"#race_id\" title=\"Direct link to heading\">​</a></h2><p>前回でも少し触れたように，netkeiba では <code>/top/race_list_sub.html</code> に対して <code>?kaisai_date=YYYYMMDD</code> を投げて HTML の断片を受け取っている．\nこの URL に対してスクレイピングをかければ，うまいことレースの一覧が得られるということである．</p><p>この URL の嬉しい点として，起点が <code>YYYYMMDD</code> になっているところである．\n例えば本日の日付 <code>20220315</code> を投げれば今日開催されるレースが返ってくる………それはつまり，毎日繰り返し定期的にデータを集められるようになるということだ．</p><p>また嬉しいことに，JRA だけでなく NAR（地方競馬）についても同様の方法でレース一覧情報が提供されていた．\nこちらは JRA と異なり平日もバンバン開催されているので，試行回数を増やせるという点ではアドバンテージとなりうるだろう．</p><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"netkeiba-の文字コード\">netkeiba の文字コード<a class=\"hash-link\" href=\"#netkeiba-の文字コード\" title=\"Direct link to heading\">​</a></h3><p>「競馬の予測」に使えるのは「レース結果」ではなくレース直前の情報だが，それは <code>https://{race|nar}.netkeiba.com/race/shutuba.html?race_id=YYYYPPNNDDRR</code> で得ることができる．\nただし，気をつけるべきことがあった．\nそれは，netkeiba のページにおける文字コードが <strong>EUC-JP</strong> に指定されているということである．</p><p>たかが文字コード，されど文字コード…… 主に Python でのスクレイピングかつ対象が日本語ページであるとを考えると，これは死活問題である．\nおそらくは <a href=\"https://requests-docs-ja.readthedocs.io/en/latest/\" target=\"_blank\" rel=\"noopener noreferrer\"><code>requests</code></a> + <a href=\"https://www.crummy.com/software/BeautifulSoup/bs4/doc\" target=\"_blank\" rel=\"noopener noreferrer\"><code>BeautifulSoup</code></a> の組み合わせでスクリプトを書くだろうが，これらの基本文字コードは <code>utf-8</code> である．\nすなわち，なんにも意識せずリクエストを投げるとすぐ文字化けしたソースを見ることになる．</p><p>もし id だけを必要とする場合には，この問題は気にならない．\n必要な要素が全て英数字記号のみで構成されているため文字化けしないからだ．\nネックとなるのは日本語情報をデータとして取得したいときだろう．</p><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"当日にならないと得られない情報\">当日にならないと得られない情報<a class=\"hash-link\" href=\"#当日にならないと得られない情報\" title=\"Direct link to heading\">​</a></h3><p><code>shutuba.html</code> では，枠・馬番・馬体重（＋オッズ）も得られるが，これらは直前になってから出ないと判明しないデータである．\nすなわち，（１）前日までにスクレイピングした情報（２）レースの３０分前にスクレイピングした情報では<strong>情報量が異なる</strong>．</p><p>最も重要と思われる馬体重の発表は，おおよそ発走時刻の一時間前であるようだ．\n十分に余裕があるが，一方でこれは何をトリガーにスクレイピングすればよいだろうか……？\nあくまで目安の時間であるため，きっかり一時間前にリクエストを投げても結果が帰らないかもしれない．\n一旦これは保留とする．</p><p>（賞味期限が極めて短いデータであるため，GitHub へ保存するよりは，一旦 Firestore 等を経由しておくのが賢いかも……？）</p><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"前日までに得られる情報\">前日までに得られる情報<a class=\"hash-link\" href=\"#前日までに得られる情報\" title=\"Direct link to heading\">​</a></h3><p>出走登録している馬の一覧を得ることができる．\nここからさらに前日あたりで本登録となり，出走できない馬も出てくる．\nまぁそれはそれで致し方ないので，出走候補について全て情報を集めておくのが良いだろう．</p><p>コードを書く方針としては，すでに開催されたレースについても <code>shutuba.html</code> は見られるのでそれをもとに処理を書き，適宜例外処理を追加していく感じにすれば良いと思う．</p><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"horse_id\"><code>horse_id</code><a class=\"hash-link\" href=\"#horse_id\" title=\"Direct link to heading\">​</a></h2><p>すべての馬に <code>/</code>, <code>/result</code>, <code>/ped</code> があり，繁殖入りできた場合には牡馬であれば <code>/sire</code>, 牝馬であれば <code>/mare</code> が存在する．\n繁殖実績については現状の優先度は高くないので一旦置いておくとして，各馬のプロファイルは逐次集める必要がある．</p><p><code>/</code> と <code>/result</code> を見比べてみたところ，どちらにも同じ戦績テーブルが配置されていたため，<code>/result</code> へのスクレイピングは省略できそうだ．</p><p><code>/</code> （トップページ）では，各馬のプロファイルと戦績を取得できる．\n後々ページコンテンツを充実させることを考えると，写真 URL も引っこ抜いてくるのがよさそうだ．</p><p><code>/ped</code> については，テーブルの形がだいぶイレギュラーなもので自前ではうまくパースできなかった．\n代わりに，<code>pandas</code> の <code>read_html</code> を使ってテーブルを引っこ抜き，その構造を利用してうまいこと「世代ごと」にイテレーションできるようにした．\nつまり，行で回すのではなく，列でループ処理できるようにした．\nこうすれば，父母，祖父母……の処理が比較的簡単に実装できる．</p><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"データ構造\">データ構造<a class=\"hash-link\" href=\"#データ構造\" title=\"Direct link to heading\">​</a></h2><p>各馬のプロファイル，戦績，血統なんかも GET できたのだからそれをファイルデータとして保存しておきたい．\nこれまではうまく一行に押し込んたうえで，それを生年ごとに連ねて一つの TSV ファイルで管理していた．\nしかし今後同時並列に複数箇所でデータ更新が走りうることを考えると，ACID 特性を備えていないのは手痛い．\n（まぁ素直に DB 使えってツッコミはあるが，あくまで GitHub に残すことを中心に考える）</p><p>ファイル数が膨大になってしまうのを覚悟で，各馬ごとに一ファイルを割り当てる方針とする．\nこうすれば，ファイル更新は最小限で済む．</p><p>次に問題になるのがフォーマットだが，サイズを考えると TSV が挙げられる．\nしかし，たかが一行のデータのために TSV を使うのはもったいない（そうするならまとめろという話にもなる）．\nここはもっと柔軟な表現を持つ構造化データを用いるべきだと考えた．\nサイズを考慮すると YAML が候補に上がるが，どの言語でも標準的に扱えるかと言うとそうではない．\nじゃあやっぱり JSON か……とも思ったが，単に JSON を扱うだけでは芸がない，もとい LOD を謳うのに <a href=\"https://json-ld.org/\" target=\"_blank\" rel=\"noopener noreferrer\"><strong>JSON-LD</strong></a> を無視するのはいただけない．</p><p><strong>各 ID ごとにファイルを作って管理，かつフォーマットとしては JSON-LD を用いるものとする</strong> というのが，今後の基本方針となった．</p><p>もちろん Virtuoso ではこのままでは使えないので，ローカルで <code>.ttl</code> へ変換するスクリプトも用意することになる．</p>",
            "url": "https://ningensei848.github.io/2022/03/23/",
            "title": "netkeiba のデータをスクレイピングして LOD 化する（３）",
            "summary": "前回はスクレイピング効率を高めるためにプロキシサーバを作ろうという試みを行なって終わった．",
            "date_modified": "2022-03-23T00:00:00.000Z",
            "author": {
                "name": "Kiai",
                "url": "https://twitter.com/Ningensei848"
            },
            "tags": [
                "python",
                "スクレイピング",
                "競馬"
            ]
        },
        {
            "id": "/2022/03/13/",
            "content_html": "<p><a href=\"https://2021.lodc.jp/\" target=\"_blank\" rel=\"noopener noreferrer\">LOD チャレンジ 2021</a>に昨年秋～年末にかけて制作したものを応募した．\n本命の方は受賞を逃したが，<a href=\"https://zenn.dev/ningensei848/articles/virtuoso_on_gcp_faster_with_cos\" target=\"_blank\" rel=\"noopener noreferrer\">副産物として生まれた記事</a>が<a href=\"https://2021.lodc.jp/awardPressRelease2021.html\" target=\"_blank\" rel=\"noopener noreferrer\">LOD プロモーション賞</a>を受賞した．</p><p><a href=\"https://zenn.dev/ningensei848/articles/virtuoso_on_gcp_faster_with_cos\" target=\"_blank\" rel=\"noopener noreferrer\">https://zenn.dev/ningensei848/articles/virtuoso_on_gcp_faster_with_cos</a></p><blockquote><p>RDF トリプルストア構築のハードルを下げることは、LOD の普及のための重要な要素の一つです。\n本作品は、代表的なトリプルストアである Virtuoso を自前で構築するための先行事例をさらに改良したものであり、技術面でのアプローチのしやすさと、インストール及びデータロードの速度向上が見込める優れたアイデアとして評価いたしました。\n他の様々なクラウドサービスにも応用できそうです。今後さらなる発展を期待いたします。</p></blockquote><p>オンラインではあったが，事務局委員長の武田 英明氏からの言葉とリモート賞状授与を受けて少し涙が出てきた．\n去年から色々散々な人生をやっていてメンタルはだいぶ暗いのだが，久々に誰かに褒めてもらって報われた気持ちになり感極まってしまった……</p><blockquote class=\"twitter-tweet\" align=\"center\" data-width=\"550\" data-lang=\"ja\" data-dnt=\"true\"><p lang=\"ja\" dir=\"ltr\"><a href=\"https://twitter.com/hashtag/lodc2021?src=hash&amp;ref_src=twsrc%5Etfw\" target=\"_blank\" rel=\"noopener noreferrer\">#lodc2021</a> LODプロモーション賞ありがとうございました！<br><br>来年はデータ作成＆活用の両部門に応募してさらに上を目指せるように今後も精進します！</p>— 腹痛再発⛅ (@Ningensei848) <a href=\"https://twitter.com/Ningensei848/status/1502928431943598081?ref_src=twsrc%5Etfw\" target=\"_blank\" rel=\"noopener noreferrer\">2022年3月13日</a></blockquote><blockquote class=\"twitter-tweet\" align=\"center\" data-width=\"550\" data-lang=\"ja\" data-dnt=\"true\"><p lang=\"ja\" dir=\"ltr\">tkk先生の受賞式での姿を見てﾃﾞｭﾌﾌつってる<a href=\"https://t.co/ONPBqaP7YS\" target=\"_blank\" rel=\"noopener noreferrer\">https://t.co/ONPBqaP7YS</a></p>— 腹痛再発⛅ (@Ningensei848) <a href=\"https://twitter.com/Ningensei848/status/1502880947892412416?ref_src=twsrc%5Etfw\" target=\"_blank\" rel=\"noopener noreferrer\">2022年3月13日</a></blockquote><blockquote class=\"twitter-tweet\" align=\"center\" data-width=\"550\" data-lang=\"ja\" data-dnt=\"true\"><p lang=\"ja\" dir=\"ltr\"><a href=\"https://t.co/nFxvNenXSm\" target=\"_blank\" rel=\"noopener noreferrer\">https://t.co/nFxvNenXSm</a><br><br>Google site だけども，高校生が頑張って作ってるのすごいなぁ………時代がどんどん</p>— 腹痛再発⛅ (@Ningensei848) <a href=\"https://twitter.com/Ningensei848/status/1502895529948172297?ref_src=twsrc%5Etfw\" target=\"_blank\" rel=\"noopener noreferrer\">2022年3月13日</a></blockquote><blockquote class=\"twitter-tweet\" align=\"center\" data-width=\"550\" data-lang=\"ja\" data-dnt=\"true\"><p lang=\"ja\" dir=\"ltr\">在野のヤベェおっさん，金を時間に任せてまじでやべ～～～～＾ことをしててすごい，俺もこれになりたいが？</p>— 腹痛再発⛅ (@Ningensei848) <a href=\"https://twitter.com/Ningensei848/status/1502901065796120578?ref_src=twsrc%5Etfw\" target=\"_blank\" rel=\"noopener noreferrer\">2022年3月13日</a></blockquote><blockquote class=\"twitter-tweet\" align=\"center\" data-width=\"550\" data-lang=\"ja\" data-dnt=\"true\"><p lang=\"ja\" dir=\"ltr\">ピコピコプラネットはマジですごいので見習いたいね<br><br>☆ピコピコプラネット☆ SPACE - SPARQLクエリ共有サイト<a href=\"https://t.co/ffUP2ulYR6\" target=\"_blank\" rel=\"noopener noreferrer\">https://t.co/ffUP2ulYR6</a></p>— 腹痛再発⛅ (@Ningensei848) <a href=\"https://twitter.com/Ningensei848/status/1502913211477024768?ref_src=twsrc%5Etfw\" target=\"_blank\" rel=\"noopener noreferrer\">2022年3月13日</a></blockquote><hr><p>そろそろ気持ちを切り替えて色々人生をやっていかねばならない．</p><p>ちょうどシンポジウムの最後で Code for Japan さんの採用情報があった．\nここで一つ応募してみようと思う．</p><p><a href=\"https://recruit.code4japan.org/\" target=\"_blank\" rel=\"noopener noreferrer\">https://recruit.code4japan.org/</a></p><p>人生始めて行かね～～～とな～～</p>",
            "url": "https://ningensei848.github.io/2022/03/13/",
            "title": "LOD Challenge 2021 授賞式に参加した",
            "summary": "LOD チャレンジ 2021に昨年秋～年末にかけて制作したものを応募した．",
            "date_modified": "2022-03-13T00:00:00.000Z",
            "author": {
                "name": "Kiai",
                "url": "https://twitter.com/Ningensei848"
            },
            "tags": [
                "LOD",
                "オープンデータ"
            ]
        },
        {
            "id": "/2022/03/12/",
            "content_html": "<p>python でデータを扱うにあたり，Notebook を使わない選択肢はないだろう．\nGoogle が提供する <a href=\"https://colab.research.google.com\" target=\"_blank\" rel=\"noopener noreferrer\">Colaboratory</a> を使って，「下書き」的にコードを書いていく．</p><p><a href=\"https://colab.research.google.com/\" target=\"_blank\" rel=\"noopener noreferrer\">https://colab.research.google.com/</a></p><p>まずは，木曜の夕方には確定する出走馬情報を得るアプローチを考える．\nnetkeiba.com においては，開催レースの一覧が <code>/top/race_list.html</code> で提供されている．\nただし，これをそのまま cURL 等でページ取得しても，各日程ごとの情報は得られない．\nなぜなら，jQuery で Ajax を頑張っているからだ（DevTool で調べてみるとわかるだろう）．</p><p>サーバクライアントモデルよろしく，API エンドポイントにリクエストを投げてデータだけを得てクライアント側で出力しているのかと思いきや，HTML コードの断片を貰って埋め込んでいるような方式のように見える．\n同じく DevTool でネットワークを監視してみると，<code>/top/race_list_sub.html</code> に対して <code>?kaisai_date=YYYYMMDD</code> でリクエストを投げていることがわかった．</p><p><a href=\"https://race.netkeiba.com/top/race_list_sub.html?kaisai_date=YYYYMMDD\" target=\"_blank\" rel=\"noopener noreferrer\">https://race.netkeiba.com/top/race_list_sub.html?kaisai_date=YYYYMMDD</a></p><p>留意すべきは，開催済み・開催前のレースの両方とも同一の形式で取得できてしまうことである．\nすなわち，ベースとなる HTML が <code>/race/shutuba.html</code> と <code>/race/result.html</code> というように異なっている．</p><p>となると，beautifulSoup に喰わせるのではなく正規表現で <code>race_id</code> を引っこ抜いてくるのが賢いだろう．</p><div class=\"theme-admonition theme-admonition-caution alert alert--warning admonition_LlT9\"><div class=\"admonitionHeading_tbUL\"><span class=\"admonitionIcon_kALy\"><svg viewBox=\"0 0 16 16\"><path fill-rule=\"evenodd\" d=\"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z\"></path></svg></span>caution</div><div class=\"admonitionContent_S0QG\"><p>レース ID については，例えば凱旋門賞や香港スプリントといった中央競馬以外のレースの場合には，例外処理が必要かもしれない．\n…………と思ったのもつかの間，ご丁寧に <code>?race_id=YYYYPPNNDDRR&amp;rf=race_list</code> といった具合に <code>&amp;rf=race_list</code> が手がかりとなってくれている．\nありがたくこれを活用し，正規表現でレース ID のみをぶっこ抜く．</p></div></div><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"スクレイピングの負荷分散\">スクレイピングの負荷分散<a class=\"hash-link\" href=\"#スクレイピングの負荷分散\" title=\"Direct link to heading\">​</a></h2><p>で，実際にスクレイピングしていくにあたって，<strong>負荷分散を考えねばならない</strong>という問題がある．\n例えば手元の Python プログラムで秒間 150 回のリクエストをサーバに送ったとしよう．\nそれによって自分は素早く大量のデータを得ることができるが，そんな大量のリクエストを捌かねばならない（しかも無償で！）サーバ側はたまったものではない．\n多くの場合，ロードバランサーなり監視システムなりが同一 IP からの異常リクエストを検知し遮断する措置が取られる．</p><p>データを集めるためには「お行儀よく」スクレイピングのコードを書く必要がある……とこれまでは思っていたが，あまりにも時間がかかりすぎる．\n待っている時間にもサーバ利用料金は発生してしまうし，資源の無駄である．\nどうにか回避するためには，<strong>複数箇所から同時並行に</strong>リクエストを投げれば良いことに気づくだろう．\n各プロセスが 2 秒ずつ待機せねばならなかったとしても，それが 10 プロセス同時であれば効率は十倍になる（進次郎構文）．</p><p>最近になって，これを手軽に実装できるのは，<a href=\"https://cloud.google.com/api-gateway\" target=\"_blank\" rel=\"noopener noreferrer\">Google API Gateway</a> + <a href=\"https://cloud.google.com/functions\" target=\"_blank\" rel=\"noopener noreferrer\">Google Cloud Function</a> の組み合わせであろうことに気がついた．\n単にリクエストのプロキシになってもらうというだけなので，特段難しいコードは存在しない（Fetch のみ）．\nちょうど先月にプレビュー版が出た Cloud Function Gen 2 を試しつつ，API Gateway で wrap して，Python からでも並列処理がしやすい方法を検討する．\n<del>（ただし，現時点ではエントリポイントがパブリックにオープンになってて悪用の恐れがあるので，認証かなんかをきちんと検証する必要がある）</del></p><p>API Gateway に対するリクエストが膨大になっても問題ないっぽいし，認証に API キー使えば不特定多数にオープンになるリスクも減らせる．</p><blockquote class=\"twitter-tweet\" align=\"center\" data-width=\"550\" data-lang=\"ja\" data-dnt=\"true\"><p lang=\"ja\" dir=\"ltr\">このドキュメントによると，「100秒あたり1000万リクエストまで」がレート制限っぽいので，個人が100並列でスクレイピングかける程度だと全然問題ないっぽい，やったぜ<a href=\"https://t.co/uAiCr1YTo8\" target=\"_blank\" rel=\"noopener noreferrer\">https://t.co/uAiCr1YTo8</a> <a href=\"https://t.co/gFPWwErK6k\" target=\"_blank\" rel=\"noopener noreferrer\">https://t.co/gFPWwErK6k</a></p>— 腹痛再発⛅ (@Ningensei848) <a href=\"https://twitter.com/Ningensei848/status/1502576964527267840?ref_src=twsrc%5Etfw\" target=\"_blank\" rel=\"noopener noreferrer\">2022年3月12日</a></blockquote><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"api-gateway-と-cloud-function\">API Gateway と Cloud Function<a class=\"hash-link\" href=\"#api-gateway-と-cloud-function\" title=\"Direct link to heading\">​</a></h2><p>色々こねこねして，使いたい名前をファイルに列挙するだけで API Gateway が生えるようにした．</p><div class=\"language-shell codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#393A34;--prism-background-color:#f6f8fa\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-shell codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">$ </span><span class=\"token function\" style=\"color:#d73a49\">npm</span><span class=\"token plain\"> run exec:all --name</span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\">NAME --project</span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\">projectName</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">$ </span><span class=\"token function\" style=\"color:#d73a49\">npm</span><span class=\"token plain\"> run gateway:describe --name</span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\">NAME --project</span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\">projectName</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">$ </span><span class=\"token function\" style=\"color:#d73a49\">npm</span><span class=\"token plain\"> run gateway:describe:api --name</span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\">NAME --project</span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\">projectName</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">$ gcloud services </span><span class=\"token builtin class-name\">enable</span><span class=\"token plain\"> my-api-123abc456def1.apigateway.my-project.cloud.goog</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg class=\"copyButtonIcon_y97N\" viewBox=\"0 0 24 24\"><path d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg class=\"copyButtonSuccessIcon_LjdS\" viewBox=\"0 0 24 24\"><path d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p><code>gateway:describe</code> でエンドポイントが得られ，<code>gateway:describe:api</code> で<strong>マネージドサービスプロパティ</strong>が表示される．\n<code>gcloud services enable ${managedServiceUri}</code> で API を有効化することで，エンドポイントに対して API キーによる認証付きでリクエストができるようになる．</p><p>また，その API キーについては，コンソール上の<a href=\"https://console.cloud.google.com/apis\" target=\"_blank\" rel=\"noopener noreferrer\">API とサービス</a>で取得する．\n〈呼び出せるキーの制限〉は，<code>openapi.yaml</code> で <code>info.title</code> で指定したもの<sup id=\"fnref-1-afd12d\"><a href=\"#fn-1-afd12d\" class=\"footnote-ref\">1</a></sup>をドロップダウンから選べば良い．</p><p>これでエンドポイントには，クエリパラメータとして <code>key=${API_KEY}</code> を渡さないと拒否されるようになった．</p><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"リクエストのプロキシ\">リクエストのプロキシ<a class=\"hash-link\" href=\"#リクエストのプロキシ\" title=\"Direct link to heading\">​</a></h2><p>いよいよ python コードを書くことになるが，リクエストを投げるのは対象とする URL ではなく，API Gateway のエンドポイントであり，URL はクエリパラメータとして <code>url=${TARGET_URL}</code> という形で渡す．\n返り値は特に加工してないため，単純にリクエストを投げたのと同様の HTML が返る．\n一箇所から規定時間内に規定回数以上のリクエストを投げると，DoS 攻撃と勘違いされてアクセス制限の憂き目に合うが，Cloud Functions で負荷分散＋ Gateway でプロキシしてやれば，問題は生じないかも？</p><p>まだ検証していない段階だが，ひとまず API Gateway の自動生成までは出来たので一区切り．</p><div class=\"footnotes\"><hr><ol><li id=\"fn-1-afd12d\"><a href=\"https://cloud.google.com/api-gateway/docs/secure-traffic-gcloud#creating_an_api_config\" target=\"_blank\" rel=\"noopener noreferrer\">API 構成の作成</a>を参照<a href=\"#fnref-1-afd12d\" class=\"footnote-backref\">↩</a></li></ol></div>",
            "url": "https://ningensei848.github.io/2022/03/12/",
            "title": "netkeiba のデータをスクレイピングして LOD 化する（２）",
            "summary": "python でデータを扱うにあたり，Notebook を使わない選択肢はないだろう．",
            "date_modified": "2022-03-12T00:00:00.000Z",
            "author": {
                "name": "Kiai",
                "url": "https://twitter.com/Ningensei848"
            },
            "tags": [
                "python",
                "スクレイピング",
                "競馬"
            ]
        },
        {
            "id": "/2022/03/08/",
            "content_html": "<p>改めて，Netkeiba からスクレイピングをやっていく．\nPython でやるのは，リクエストに間隔を開ける都合上，多少時間がかかっても問題がないことや，DataFrame 系の資産を使い回せることが利点として挙げられる</p><p><a href=\"https://github.com/Ningensei848/ml4keiba\" target=\"_blank\" rel=\"noopener noreferrer\">https://github.com/Ningensei848/ml4keiba</a></p><p><a href=\"https://github.com/Ningensei848/ml4keiba\" target=\"_blank\" rel=\"noopener noreferrer\"><img loading=\"lazy\" src=\"https://4.bp.blogspot.com/-7KSDS7fjQZU/U1T4Hfdp7aI/AAAAAAAAfds/kxPMlCXrIkk/s200/seiza13_hebitsukai.png\" alt=\"ギリシャ神話に出てくる蛇を持つ医者アスクレーピオス（へびつかい座）\" class=\"img_ev3q\"></a></p><p>前回までの反省として，<strong>何も考えずひたすらにスクレイピングしていた</strong> というものが挙げられる．すなわち，不要なデータまでも「必要かもしれない」と集めて時間を浪費していた．これは，リストを作ってそれを一つずつ実行する設計になっていたことが原因だ．</p><p>例えば本日はちょうど「弥生賞ディープインパクト記念」をやっている．\nこのレースの予想をデータ分析によって行う場合に，「天皇賞（春）」のデータが必要だろうか？</p><p>最初から「完璧」を目指して作ろうとするからポンコツ不完全にしかならないという現実があるので，実際のレース時期に合わせてちいさくはじめていくべきだろう．</p><p>今回で言えば，弥生賞に出てくる馬それぞれの過去のレースを探ったり，過去の弥生賞についてデータを浚ったりするのが常道といえる．</p><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"てがかり\">てがかり<a class=\"hash-link\" href=\"#てがかり\" title=\"Direct link to heading\">​</a></h2><p>まず，レースに出走する馬の一覧を入手する必要がある．</p><p>netkeiba では，<code>YYYYPPNNDDRR</code> という ID でレースごとの情報が管理されている．</p><ul><li><code>YYYY</code>: 開催年度</li><li><code>PP</code>: 会場コード</li><li><code>NN</code>: N 回目</li><li><code>DD</code>: 第 D 日</li><li><code>RR</code>: 第 R レース</li></ul><p>といった具合である．</p><p>過去の調査では，<code>PP</code> が厄介なことに，「地方」「海外」も雑多に含まれることがあり，単にインクリメントしているわけではないらしい．</p><p>（と，これを調べる過程で netkeiba.com が設立されたのが 1999 年末だということを知った，<sup id=\"fnref-1-2ce0f1\"><a href=\"#fn-1-2ce0f1\" class=\"footnote-ref\">1</a></sup>そろそろ四半世紀にもなる上に前世紀からデータ提供をやってるんだからすげぇ）</p><p><a href=\"https://ascii.jp/elem/000/000/306/306735/\" target=\"_blank\" rel=\"noopener noreferrer\">ASCII.jp：ネットドリーマーズ、競馬のポータルサイト“netkeiba.com”を開設</a></p><p>これを書いているのは火曜日だが，週末に行われるレースについては現時点で出走馬も枠順も決まっていなかった．ただし週末に行われる重賞レースに登録されている馬の一覧は見ることができた．調べてみると netkeiba においては，以下のようなスケジュールで情報が書き換わるようだ：</p><ul><li>前週の日曜（G1 は前々週）　特別レース登録馬を公開</li><li>（netkeiba 独自）水曜 20 時ごろ　取材などからわかった水曜時点で出走意思のある馬（想定馬一覧）</li><li>木曜 16 時ごろ　　　　出走馬確定</li><li>レース前日 10 時ごろ　枠順確定</li></ul><p><a href=\"https://www.jra.go.jp/kouza/yougo/w333.html\" target=\"_blank\" rel=\"noopener noreferrer\">特別レース（特別競走）</a> とは，\"一般競走と違って、特別登録を必要とする競走。特別競走には、現在の中央競馬ではすべてレース名がつけられている。また重賞競走も特別競走のなかに含まれる\" ものであるらしい．また<a href=\"https://www.jra.go.jp/kouza/yougo/w320.html\" target=\"_blank\" rel=\"noopener noreferrer\">一般競走</a>とは，特別競走以外，すなわち新馬戦やオープン戦，条件戦などのことを指す<sup id=\"fnref-2-2ce0f1\"><a href=\"#fn-2-2ce0f1\" class=\"footnote-ref\">2</a></sup>．</p><p>つまり，おおよそほとんどの場合において，木曜日の夜あたりから情報収集を始めるのが良いということがわかる．\nまた，枠順が決まらないことには予想も固まらないことを考えると，レース前日の夕方から準備し始めても十分に間に合う．\n金曜＋土日でレース本番への対策を行ない，それ以外の日には別の情報収集＋メンテナンスや振り返りというペース配分になるだろう．</p><p>（※これは中央競馬だけにフォーカスした場合の話で，平日もガンガン走っている地方競馬はまた別の話）</p><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"出走馬一覧をシードとして\">出走馬一覧をシードとして…<a class=\"hash-link\" href=\"#出走馬一覧をシードとして\" title=\"Direct link to heading\">​</a></h2><p>netkeiba では，出走馬ごとに ID が振られており，それによって血統や戦績，厩舎や騎手などの情報を管理している．</p><p>日本生まれ，かつ出生情報がきちんと揃っている場合には <code>https://db.netkeiba.com/horse/YYYYXXXXXX</code> と表記される（<code>YYYY</code> は生年）．\n一方で海外産馬などの都合で情報が不明瞭な場合は <code>https://db.netkeiba.com/horse/000a00033a</code> といった ID が振られている（ちなみにこの URL は<a href=\"https://db.netkeiba.com/horse/000a00033a\" target=\"_blank\" rel=\"noopener noreferrer\">サンデーサイレンス</a>）．\n<code>000a</code> はほぼ共通だが，それ以外についてはひと目見ただけではあまり共通項が見えてこない．</p><hr><p>各馬について，スクレイピングの対象となるのは以下の５つのページである：</p><ul><li><code>/</code>: プロフィール</li><li><code>/result</code>: 競走成績</li><li><code>/ped</code>: 血統</li><li><code>/sire</code> or <code>/mare</code>: 産駒の競走成績（繁殖入りした馬のみ）</li></ul><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"プロフィール\">プロフィール<a class=\"hash-link\" href=\"#プロフィール\" title=\"Direct link to heading\">​</a></h3><p>各馬のトップページにアクセスするとまっ先に目に入るのがプロフィールである．\n生まれに関する基礎情報や写真なんかもおいてあるし，他のページに詳しく掲載される情報も概要がまとめてある．</p><p>ここで収集すべきは，<code>div.horse_title</code>, <code>div.db_photo_box&gt;img</code>, <code>dl.tekisei&gt;dd&gt;table.tekisei_table</code>, <code>div.db_prof_table</code> の４箇所だ．\nそれぞれ，「名前」「写真」「適正評価」「プロフィール」が掲載されている．</p><p>また，「繁殖入りできたかどうか？」の判定のために〈産駒成績〉タブの有無も見つけられるようにしたい．\n<code>ul.db_detail_menu</code> を探るといいだろう．</p><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"競走成績\">競走成績<a class=\"hash-link\" href=\"#競走成績\" title=\"Direct link to heading\">​</a></h3><p>競走成績一覧のページでは，その馬が一つでもレースに出ていれば，結果が表として出力される．\n<code>table.db_h_race_results</code> を収集すればいいだろう．\n未出走の場合や海外産馬の場合には表がないこともある．例外処理には気をつけたい．</p><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"血統\">血統<a class=\"hash-link\" href=\"#血統\" title=\"Direct link to heading\">​</a></h3><p>こちらも同じく真ん中にデカデカと血統表が出力される．\n<code>table.blood_table</code> を収集すればいいだろう．\n名前等はこの時点では収集せず……と思ったが，後々必要になる気もしてきた．</p><p>また，兄弟等の近親についても情報があるが，敢えてこれを探りに行くのは骨が折れる．\nある程度データを集めてから，自前で謹慎を探せるようにするほうが良いと思われる．</p><p>表の組み方が特殊なことに留意．</p><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"産駒成績\">産駒成績<a class=\"hash-link\" href=\"#産駒成績\" title=\"Direct link to heading\">​</a></h3><p>牡馬であれば <code>/sire</code>, 牝馬であれば <code>/mare</code> のページを持つ場合がある．\nこれは，繁殖入りできるほど血統的に期待される，或いは競走成績が良かった馬ということで，勝ち馬予想のためには必要不可欠な要素ではある．\nが，あくまで統計的な情報でしかなく，最初から予想アルゴリズムに組み込むのは難しいかもしれない．</p><p>産駒成績のページの存在判定は各馬のトップページでもタブを見ればできるはずなので，一旦保留して関知しないこととする．</p><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"一旦まとめ\">一旦まとめ<a class=\"hash-link\" href=\"#一旦まとめ\" title=\"Direct link to heading\">​</a></h2><p>netkeiba からスクレイピングしてくるための検討をした．</p><p>スクレイピング処理の部分と LOD 化する部分の話がまだ書けていないが，一旦 Puslish しておく．\n（まぁどうなるかわからないが，前編ということとする）</p><p>Python によるスクレイピング処理とはすなわち， (1) <code>requests</code> （あるいは <code>aiohttp</code> ）でページコンテンツを取得し，(2) それを BeautifulSoup <sup id=\"fnref-3-2ce0f1\"><a href=\"#fn-3-2ce0f1\" class=\"footnote-ref\">3</a></sup> にして (3) <code>pandas</code> でテーブルとか引っこ抜くことである．\nこの辺は以前に何度もやっているのでそのへんの資産を使い回せたら嬉しいな……</p><p>LOD 化するというのは，どうしようかまだ悩むところである．\nオープンデータにすることを考えると，いちいち事前知識が必要になる TTL 形式のみで提供するのは避けたい．\nとなると JSON-LD か？となるがこれもこれでファイル容量の無駄遣いが大きい気がする……</p><p>TSV で提供 &amp; TTL への変換ツールも提供という形がもっともスマートな解だと信じたい．</p><div class=\"footnotes\"><hr><ol><li id=\"fn-1-2ce0f1\">というかそんな時期の記事にまだアクセスできる ASCII の根性がスゲェ，尊敬に値する<a href=\"#fnref-1-2ce0f1\" class=\"footnote-backref\">↩</a></li><li id=\"fn-2-2ce0f1\"><a href=\"https://www.jra.go.jp/kouza/yougo/c10020.html\" target=\"_blank\" rel=\"noopener noreferrer\">レースの種類、条件など（競馬用語辞典）JRA</a> を参照のこと<a href=\"#fnref-2-2ce0f1\" class=\"footnote-backref\">↩</a></li><li id=\"fn-3-2ce0f1\">現時点 (2022/03/08) の<a href=\"https://pypi.org/project/beautifulsoup4/4.10.0/\" target=\"_blank\" rel=\"noopener noreferrer\">最新版は Python 3.8 前提の 4.10.0</a> である（なお日本語訳は 4.2.0 までしかない模様）<a href=\"#fnref-3-2ce0f1\" class=\"footnote-backref\">↩</a></li></ol></div>",
            "url": "https://ningensei848.github.io/2022/03/08/",
            "title": "netkeiba のデータをスクレイピングして LOD 化する（１）",
            "summary": "改めて，Netkeiba からスクレイピングをやっていく．",
            "date_modified": "2022-03-08T00:00:00.000Z",
            "author": {
                "name": "Kiai",
                "url": "https://twitter.com/Ningensei848"
            },
            "tags": [
                "python",
                "スクレイピング",
                "競馬"
            ]
        },
        {
            "id": "/2022/03/03/",
            "content_html": "<p>もともとは Next.js の知見を貯めるために vercel では普通のアプリとして，GitHub Pages では SSG としてブログをつくる予定だった．が， Docusaurus で全然いいしむしろデザイン対応の手間を考えたら Next.js で全部自分でやるのは（無限にこだわり続けてしまって）完成しない！という結論を得た．</p><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"そもそも\">そもそも<a class=\"hash-link\" href=\"#そもそも\" title=\"Direct link to heading\">​</a></h2><p>Docusaurus もこれまで $\\alpha$ 版には触れてきたが，Next.js における <code>getStaticProps</code> がないからローカルのファイルデータのやり取りができなくて辛い，と思い込んでしまっていた．しかし，実際にはプラグインを時前実装することで実現できることがわかった（それも正直どうなのって感じだが）</p><p>Docusaurus と Next.js のハイブリッドも検討したが，あまり親和性がないと言うか，そこまでしてやるメリットがないとは感じていた．</p><p>改めて，Next.js を使うのは ISR をやれるからという利点があるときだけで，そうでないときは Docusaurus を使ったほうが後々の拡張性が高いように感じた（特にレイアウトやらダークモードなどデザイン苦手マンには）</p><p>で，この GitHub Pages は，その性質上今後も SSG のみ対応すると思われる．じゃあ Next.js に縋り付く意味なくない？よって Docusaurus への移行を決意した．</p><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"今後\">今後<a class=\"hash-link\" href=\"#今後\" title=\"Direct link to heading\">​</a></h2><p>なにかしらフィーチャーすべきものについては，「ドキュメント」をつくってまとめる．幸い「Multi Sidebar」なるものはすでにある（上部バーのドロップダウンがすぐに作れてアド）</p><p>ブログは，ルーティングをもう少し留意する必要はあると思いつつも，まぁこれでいいかという妥協点を保っている．そんなに何度も何度も更新するわけではないし……</p><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"最後に\">最後に<a class=\"hash-link\" href=\"#最後に\" title=\"Direct link to heading\">​</a></h2><p>はやいとこいくつか記事作って Google Adsense 通るようにしたいね</p><hr><p>↓ 　これは URL 貼り付けるだけでツイートが埋め込み表示されて便利ね～というデモンストレーションです</p><blockquote class=\"twitter-tweet\" align=\"center\" data-width=\"550\" data-lang=\"ja\" data-dnt=\"true\"><p lang=\"ja\" dir=\"ltr\">余裕をもってバスに乗る🚌</p>— 腹痛再発⛅ (@Ningensei848) <a href=\"https://twitter.com/Ningensei848/status/1477068019612659712?ref_src=twsrc%5Etfw\" target=\"_blank\" rel=\"noopener noreferrer\">2022年1月1日</a></blockquote><p>↓ 　あとこの辺に SNS 向けの共有ボタンがいくつか設置されてるはず</p>",
            "url": "https://ningensei848.github.io/2022/03/03/",
            "title": "個人ブログを Docusaurus で再始動する",
            "summary": "もともとは Next.js の知見を貯めるために vercel では普通のアプリとして，GitHub Pages では SSG としてブログをつくる予定だった．が， Docusaurus で全然いいしむしろデザイン対応の手間を考えたら Next.js で全部自分でやるのは（無限にこだわり続けてしまって）完成しない！という結論を得た．",
            "date_modified": "2022-03-04T00:00:00.000Z",
            "author": {
                "name": "Kiai",
                "url": "https://twitter.com/Ningensei848"
            },
            "tags": [
                "日記"
            ]
        }
    ]
}