(()=>{"use strict";var e={913:()=>{try{self["workbox:core:6.5.1"]&&_()}catch(e){}},977:()=>{try{self["workbox:precaching:6.5.1"]&&_()}catch(e){}},80:()=>{try{self["workbox:routing:6.5.1"]&&_()}catch(e){}},873:()=>{try{self["workbox:strategies:6.5.1"]&&_()}catch(e){}}},t={};function s(a){var n=t[a];if(void 0!==n)return n.exports;var i=t[a]={exports:{}};return e[a](i,i.exports,s),i.exports}(()=>{s(913);const e=(e,...t)=>{let s=e;return t.length>0&&(s+=` :: ${JSON.stringify(t)}`),s};class t extends Error{constructor(t,s){super(e(t,s)),this.name=t,this.details=s}}const a={googleAnalytics:"googleAnalytics",precache:"precache-v2",prefix:"workbox",runtime:"runtime",suffix:"undefined"!=typeof registration?registration.scope:""},n=e=>[a.prefix,e,a.suffix].filter((e=>e&&e.length>0)).join("-"),i=e=>e||n(a.precache),r=e=>e||n(a.runtime);function c(e,t){const s=t();return e.waitUntil(s),s}s(977);function o(e){if(!e)throw new t("add-to-cache-list-unexpected-type",{entry:e});if("string"==typeof e){const t=new URL(e,location.href);return{cacheKey:t.href,url:t.href}}const{revision:s,url:a}=e;if(!a)throw new t("add-to-cache-list-unexpected-type",{entry:e});if(!s){const e=new URL(a,location.href);return{cacheKey:e.href,url:e.href}}const n=new URL(a,location.href),i=new URL(a,location.href);return n.searchParams.set("__WB_REVISION__",s),{cacheKey:n.href,url:i.href}}class h{constructor(){this.updatedURLs=[],this.notUpdatedURLs=[],this.handlerWillStart=async({request:e,state:t})=>{t&&(t.originalRequest=e)},this.cachedResponseWillBeUsed=async({event:e,state:t,cachedResponse:s})=>{if("install"===e.type&&t&&t.originalRequest&&t.originalRequest instanceof Request){const e=t.originalRequest.url;s?this.notUpdatedURLs.push(e):this.updatedURLs.push(e)}return s}}}class l{constructor({precacheController:e}){this.cacheKeyWillBeUsed=async({request:e,params:t})=>{const s=(null==t?void 0:t.cacheKey)||this._precacheController.getCacheKeyForURL(e.url);return s?new Request(s,{headers:e.headers}):e},this._precacheController=e}}let u;async function f(e,s){let a=null;if(e.url){a=new URL(e.url).origin}if(a!==self.location.origin)throw new t("cross-origin-copy-response",{origin:a});const n=e.clone(),i={headers:new Headers(n.headers),status:n.status,statusText:n.statusText},r=s?s(i):i,c=function(){if(void 0===u){const e=new Response("");if("body"in e)try{new Response(e.body),u=!0}catch(e){u=!1}u=!1}return u}()?n.body:await n.blob();return new Response(c,r)}function d(e,t){const s=new URL(e);for(const e of t)s.searchParams.delete(e);return s.href}class p{constructor(){this.promise=new Promise(((e,t)=>{this.resolve=e,this.reject=t}))}}const g=new Set;s(873);function y(e){return"string"==typeof e?new Request(e):e}class w{constructor(e,t){this._cacheKeys={},Object.assign(this,t),this.event=t.event,this._strategy=e,this._handlerDeferred=new p,this._extendLifetimePromises=[],this._plugins=[...e.plugins],this._pluginStateMap=new Map;for(const e of this._plugins)this._pluginStateMap.set(e,{});this.event.waitUntil(this._handlerDeferred.promise)}async fetch(e){const{event:s}=this;let a=y(e);if("navigate"===a.mode&&s instanceof FetchEvent&&s.preloadResponse){const e=await s.preloadResponse;if(e)return e}const n=this.hasCallback("fetchDidFail")?a.clone():null;try{for(const e of this.iterateCallbacks("requestWillFetch"))a=await e({request:a.clone(),event:s})}catch(e){if(e instanceof Error)throw new t("plugin-error-request-will-fetch",{thrownErrorMessage:e.message})}const i=a.clone();try{let e;e=await fetch(a,"navigate"===a.mode?void 0:this._strategy.fetchOptions);for(const t of this.iterateCallbacks("fetchDidSucceed"))e=await t({event:s,request:i,response:e});return e}catch(e){throw n&&await this.runCallbacks("fetchDidFail",{error:e,event:s,originalRequest:n.clone(),request:i.clone()}),e}}async fetchAndCachePut(e){const t=await this.fetch(e),s=t.clone();return this.waitUntil(this.cachePut(e,s)),t}async cacheMatch(e){const t=y(e);let s;const{cacheName:a,matchOptions:n}=this._strategy,i=await this.getCacheKey(t,"read"),r=Object.assign(Object.assign({},n),{cacheName:a});s=await caches.match(i,r);for(const e of this.iterateCallbacks("cachedResponseWillBeUsed"))s=await e({cacheName:a,matchOptions:n,cachedResponse:s,request:i,event:this.event})||void 0;return s}async cachePut(e,s){const a=y(e);var n;await(n=0,new Promise((e=>setTimeout(e,n))));const i=await this.getCacheKey(a,"write");if(!s)throw new t("cache-put-with-no-response",{url:(r=i.url,new URL(String(r),location.href).href.replace(new RegExp(`^${location.origin}`),""))});var r;const c=await this._ensureResponseSafeToCache(s);if(!c)return!1;const{cacheName:o,matchOptions:h}=this._strategy,l=await self.caches.open(o),u=this.hasCallback("cacheDidUpdate"),f=u?await async function(e,t,s,a){const n=d(t.url,s);if(t.url===n)return e.match(t,a);const i=Object.assign(Object.assign({},a),{ignoreSearch:!0}),r=await e.keys(t,i);for(const t of r)if(n===d(t.url,s))return e.match(t,a)}(l,i.clone(),["__WB_REVISION__"],h):null;try{await l.put(i,u?c.clone():c)}catch(e){if(e instanceof Error)throw"QuotaExceededError"===e.name&&await async function(){for(const e of g)await e()}(),e}for(const e of this.iterateCallbacks("cacheDidUpdate"))await e({cacheName:o,oldResponse:f,newResponse:c.clone(),request:i,event:this.event});return!0}async getCacheKey(e,t){const s=`${e.url} | ${t}`;if(!this._cacheKeys[s]){let a=e;for(const e of this.iterateCallbacks("cacheKeyWillBeUsed"))a=y(await e({mode:t,request:a,event:this.event,params:this.params}));this._cacheKeys[s]=a}return this._cacheKeys[s]}hasCallback(e){for(const t of this._strategy.plugins)if(e in t)return!0;return!1}async runCallbacks(e,t){for(const s of this.iterateCallbacks(e))await s(t)}*iterateCallbacks(e){for(const t of this._strategy.plugins)if("function"==typeof t[e]){const s=this._pluginStateMap.get(t),a=a=>{const n=Object.assign(Object.assign({},a),{state:s});return t[e](n)};yield a}}waitUntil(e){return this._extendLifetimePromises.push(e),e}async doneWaiting(){let e;for(;e=this._extendLifetimePromises.shift();)await e}destroy(){this._handlerDeferred.resolve(null)}async _ensureResponseSafeToCache(e){let t=e,s=!1;for(const e of this.iterateCallbacks("cacheWillUpdate"))if(t=await e({request:this.request,response:t,event:this.event})||void 0,s=!0,!t)break;return s||t&&200!==t.status&&(t=void 0),t}}class _ extends class{constructor(e={}){this.cacheName=r(e.cacheName),this.plugins=e.plugins||[],this.fetchOptions=e.fetchOptions,this.matchOptions=e.matchOptions}handle(e){const[t]=this.handleAll(e);return t}handleAll(e){e instanceof FetchEvent&&(e={event:e,request:e.request});const t=e.event,s="string"==typeof e.request?new Request(e.request):e.request,a="params"in e?e.params:void 0,n=new w(this,{event:t,request:s,params:a}),i=this._getResponse(n,s,t);return[i,this._awaitComplete(i,n,s,t)]}async _getResponse(e,s,a){let n;await e.runCallbacks("handlerWillStart",{event:a,request:s});try{if(n=await this._handle(s,e),!n||"error"===n.type)throw new t("no-response",{url:s.url})}catch(t){if(t instanceof Error)for(const i of e.iterateCallbacks("handlerDidError"))if(n=await i({error:t,event:a,request:s}),n)break;if(!n)throw t}for(const t of e.iterateCallbacks("handlerWillRespond"))n=await t({event:a,request:s,response:n});return n}async _awaitComplete(e,t,s,a){let n,i;try{n=await e}catch(i){}try{await t.runCallbacks("handlerDidRespond",{event:a,request:s,response:n}),await t.doneWaiting()}catch(e){e instanceof Error&&(i=e)}if(await t.runCallbacks("handlerDidComplete",{event:a,request:s,response:n,error:i}),t.destroy(),i)throw i}}{constructor(e={}){e.cacheName=i(e.cacheName),super(e),this._fallbackToNetwork=!1!==e.fallbackToNetwork,this.plugins.push(_.copyRedirectedCacheableResponsesPlugin)}async _handle(e,t){const s=await t.cacheMatch(e);return s||(t.event&&"install"===t.event.type?await this._handleInstall(e,t):await this._handleFetch(e,t))}async _handleFetch(e,s){let a;const n=s.params||{};if(!this._fallbackToNetwork)throw new t("missing-precache-entry",{cacheName:this.cacheName,url:e.url});{0;const t=n.integrity,i=e.integrity,r=!i||i===t;if(a=await s.fetch(new Request(e,{integrity:i||t})),t&&r){this._useDefaultCacheabilityPluginIfNeeded();await s.cachePut(e,a.clone());0}}return a}async _handleInstall(e,s){this._useDefaultCacheabilityPluginIfNeeded();const a=await s.fetch(e);if(!await s.cachePut(e,a.clone()))throw new t("bad-precaching-response",{url:e.url,status:a.status});return a}_useDefaultCacheabilityPluginIfNeeded(){let e=null,t=0;for(const[s,a]of this.plugins.entries())a!==_.copyRedirectedCacheableResponsesPlugin&&(a===_.defaultPrecacheCacheabilityPlugin&&(e=s),a.cacheWillUpdate&&t++);0===t?this.plugins.push(_.defaultPrecacheCacheabilityPlugin):t>1&&null!==e&&this.plugins.splice(e,1)}}_.defaultPrecacheCacheabilityPlugin={cacheWillUpdate:async({response:e})=>!e||e.status>=400?null:e},_.copyRedirectedCacheableResponsesPlugin={cacheWillUpdate:async({response:e})=>e.redirected?await f(e):e};class v{constructor({cacheName:e,plugins:t=[],fallbackToNetwork:s=!0}={}){this._urlsToCacheKeys=new Map,this._urlsToCacheModes=new Map,this._cacheKeysToIntegrities=new Map,this._strategy=new _({cacheName:i(e),plugins:[...t,new l({precacheController:this})],fallbackToNetwork:s}),this.install=this.install.bind(this),this.activate=this.activate.bind(this)}get strategy(){return this._strategy}precache(e){this.addToCacheList(e),this._installAndActiveListenersAdded||(self.addEventListener("install",this.install),self.addEventListener("activate",this.activate),this._installAndActiveListenersAdded=!0)}addToCacheList(e){const s=[];for(const a of e){"string"==typeof a?s.push(a):a&&void 0===a.revision&&s.push(a.url);const{cacheKey:e,url:n}=o(a),i="string"!=typeof a&&a.revision?"reload":"default";if(this._urlsToCacheKeys.has(n)&&this._urlsToCacheKeys.get(n)!==e)throw new t("add-to-cache-list-conflicting-entries",{firstEntry:this._urlsToCacheKeys.get(n),secondEntry:e});if("string"!=typeof a&&a.integrity){if(this._cacheKeysToIntegrities.has(e)&&this._cacheKeysToIntegrities.get(e)!==a.integrity)throw new t("add-to-cache-list-conflicting-integrities",{url:n});this._cacheKeysToIntegrities.set(e,a.integrity)}if(this._urlsToCacheKeys.set(n,e),this._urlsToCacheModes.set(n,i),s.length>0){const e=`Workbox is precaching URLs without revision info: ${s.join(", ")}\nThis is generally NOT safe. Learn more at https://bit.ly/wb-precache`;console.warn(e)}}}install(e){return c(e,(async()=>{const t=new h;this.strategy.plugins.push(t);for(const[t,s]of this._urlsToCacheKeys){const a=this._cacheKeysToIntegrities.get(s),n=this._urlsToCacheModes.get(t),i=new Request(t,{integrity:a,cache:n,credentials:"same-origin"});await Promise.all(this.strategy.handleAll({params:{cacheKey:s},request:i,event:e}))}const{updatedURLs:s,notUpdatedURLs:a}=t;return{updatedURLs:s,notUpdatedURLs:a}}))}activate(e){return c(e,(async()=>{const e=await self.caches.open(this.strategy.cacheName),t=await e.keys(),s=new Set(this._urlsToCacheKeys.values()),a=[];for(const n of t)s.has(n.url)||(await e.delete(n),a.push(n.url));return{deletedURLs:a}}))}getURLsToCacheKeys(){return this._urlsToCacheKeys}getCachedURLs(){return[...this._urlsToCacheKeys.keys()]}getCacheKeyForURL(e){const t=new URL(e,location.href);return this._urlsToCacheKeys.get(t.href)}getIntegrityForCacheKey(e){return this._cacheKeysToIntegrities.get(e)}async matchPrecache(e){const t=e instanceof Request?e.url:e,s=this.getCacheKeyForURL(t);if(s){return(await self.caches.open(this.strategy.cacheName)).match(s)}}createHandlerBoundToURL(e){const s=this.getCacheKeyForURL(e);if(!s)throw new t("non-precached-url",{url:e});return t=>(t.request=new Request(e),t.params=Object.assign({cacheKey:s},t.params),this.strategy.handle(t))}}s(80);(async()=>{const e=function(){const e=JSON.parse(new URLSearchParams(self.location.search).get("params"));return e.debug&&console.log("[Docusaurus-PWA][SW]: Service Worker params:",e),e}(),t=[{"revision":"982c7d755ea43478b2a35e108e2009f5","url":"2022/03/03.html"},{"revision":"d660c93ef26bc57cc95e89cd3a9f5e71","url":"2022/03/08.html"},{"revision":"fc039b17b5a59a551855b8273233f71f","url":"2022/03/12.html"},{"revision":"cdf630889c8f7b69e602525d1aa41deb","url":"2022/03/13.html"},{"revision":"5c38f47a4343e4ac6c7054daed8d38d9","url":"2022/03/23.html"},{"revision":"b7cb99c4f7b8c5b4c1904d87835550e9","url":"2022/03/28.html"},{"revision":"7560147a21ad738ac22ac699f2cc9c2f","url":"2022/03/30.html"},{"revision":"2e9c408b63d830cc0cf11ba34abdb6d9","url":"2022/04/01.html"},{"revision":"d1a38ec1425342cece321e817f35bc51","url":"404.html"},{"revision":"a16cc6d5543f1e37c8c70ee94229e6c4","url":"archive.html"},{"revision":"8164946cdc8e1974a35614a02dde7396","url":"assets/css/styles.1da7361f.css"},{"revision":"ec9cda9cace1ab836e88d1313bdfc676","url":"assets/js/01a85c17.9b9fe25a.js"},{"revision":"69e1214b026b364a61c4a084b8c46e47","url":"assets/js/11112098.9157da83.js"},{"revision":"7c7c959c70e07f084a95b7491086a6a4","url":"assets/js/131.fcb18d5a.js"},{"revision":"ba5331210c90fb0b155a2b9e381b8f75","url":"assets/js/16bfa084.89ab5792.js"},{"revision":"579ddf5e2bae3fd6d916c9d62b0db3c7","url":"assets/js/1963432a.b8004f30.js"},{"revision":"1a18fb8c205f38524c099d6680dca9cd","url":"assets/js/1d88fcc7.698c7b94.js"},{"revision":"2d719b28bbb83c2e619c4f2137a9532d","url":"assets/js/1e0de7ec.c6182e47.js"},{"revision":"0f52da8a7d187fa797f259634d5f0831","url":"assets/js/230.ebd3f54e.js"},{"revision":"0a1a07a73e5c3a2e02330123063f9097","url":"assets/js/283.743afc06.js"},{"revision":"54d24cf58784c25b8e8f47a52f746adc","url":"assets/js/2a3f3b74.5223b010.js"},{"revision":"e5cfbabc42039984e1eaef48f79ef952","url":"assets/js/2e801cce.9d6d2318.js"},{"revision":"8c511db9d8711d7a22e815852da4c0d0","url":"assets/js/39eef7be.5b1f48ab.js"},{"revision":"f6c39be55eda7673888ba2ec0bb716af","url":"assets/js/420d83dc.180bdcd2.js"},{"revision":"b43ea2079d5e0c08387817c6769e6a15","url":"assets/js/6464f901.330553f8.js"},{"revision":"490c3384672ebf497178d36dfe87dbb4","url":"assets/js/6875c492.a94c6949.js"},{"revision":"bddf7ad382a7ccbd017c34dc35db052a","url":"assets/js/69.497de2a3.js"},{"revision":"f2f53110dc3b3eabbbd4b77822fbafee","url":"assets/js/718e3478.a47a0cb4.js"},{"revision":"5174e85e015a889c249cf93b5e151778","url":"assets/js/75.a94dc1c0.js"},{"revision":"007695860b246917fd5462941d30b98f","url":"assets/js/814f3328.a583ea55.js"},{"revision":"b1bd45c36d805f961d570419e38c32ff","url":"assets/js/81939e20.2b5ecdf0.js"},{"revision":"647c19299c7aa138b6614eebe4043cbd","url":"assets/js/8767f175.27403c04.js"},{"revision":"5e87275d8e348b791dbd8aeae4a347bc","url":"assets/js/917e5a49.859cefe0.js"},{"revision":"62dd89de8dbea15ed464200a592fe209","url":"assets/js/967a33ff.dd8deb4f.js"},{"revision":"252abc64a0a4fdffd74b940d610d4f6c","url":"assets/js/98f2f6cf.5ae85d35.js"},{"revision":"cc03b4ba310f559de009fd474a09cb01","url":"assets/js/9e4087bc.65e9ed25.js"},{"revision":"65c1db30869c938c4f30973dafaf9b9a","url":"assets/js/a094e1d7.fbf47c12.js"},{"revision":"d60859b38761fa3a255c74fad0f21fdc","url":"assets/js/a5557bb9.7ae094ef.js"},{"revision":"ab383afee62ba85a6e24328a774529cb","url":"assets/js/a6aa9e1f.6034aa5d.js"},{"revision":"5bf23b4f7f615aa0a4661858493ecfc5","url":"assets/js/b72ac345.05abfe12.js"},{"revision":"8f88c16b82c3f5831e1cb558a5e7a571","url":"assets/js/b83475be.673ac4ef.js"},{"revision":"cbe3b8ec1534f33fa34a03e0aed86b7e","url":"assets/js/c573638f.1bd28254.js"},{"revision":"04b0ed940dc78b98ccc6006d65818d09","url":"assets/js/c7015929.597234b0.js"},{"revision":"f1ae627cd46344822a20853e90593aaf","url":"assets/js/ca1c7590.2351b0a4.js"},{"revision":"5f8e5fe267fec750f99f0869afbe4b0a","url":"assets/js/ccc49370.b02e036a.js"},{"revision":"0ca023f705611a47f888bf630993a46e","url":"assets/js/d8a7e9fa.e6772d84.js"},{"revision":"c8868f85b0778beba0323f79da73e759","url":"assets/js/d9f8f7d4.9b446afa.js"},{"revision":"8a63e42e8049c2dd50fba69c5971c46d","url":"assets/js/df0696ba.cde4ba7f.js"},{"revision":"8a5f16f99678f2f43b24109827b78faa","url":"assets/js/e42991a9.83e4efdb.js"},{"revision":"2c0925c81297317408beb2969027dd33","url":"assets/js/e53cb30c.c17024b9.js"},{"revision":"8dc4f0c3e97a14cdb62f8e7d6baa6819","url":"assets/js/f09638d0.15eb6316.js"},{"revision":"c195bec3e710940a631f79af3fcb2566","url":"assets/js/f281c90e.267c05a9.js"},{"revision":"68e6a9582402dde39d9fe0d894d1998d","url":"assets/js/f580a9d0.c50c14ed.js"},{"revision":"12c79155edf30d4c72bba5a4361ccd39","url":"assets/js/f6af7b19.3140ec33.js"},{"revision":"cb60faf02ea78f37516c45230790f8f0","url":"assets/js/fdd1792a.2d26f149.js"},{"revision":"392b9c8423e5f01505143528167af7e6","url":"assets/js/fe4fd697.dd918912.js"},{"revision":"c82008c1f207627a374f9c7a4b197d8a","url":"assets/js/main.b202ebbe.js"},{"revision":"9d70d9386daafec5dbf78b43297e430e","url":"assets/js/runtime~main.b18c52f5.js"},{"revision":"2388aa1f28fed98141f69d56952a10e9","url":"feed.json"},{"revision":"15408b12ccfedd4800add8d3f2681241","url":"index.html"},{"revision":"9b1607326ef21fa8bfe0c2357d8cfed6","url":"tags.html"},{"revision":"8e71b3e17159f05de9a63e6e69d6fcec","url":"tags/lod.html"},{"revision":"765a348422429391b802771922761d36","url":"tags/python.html"},{"revision":"016dea2784bca034f20b8842439cd269","url":"tags/オープンデータ.html"},{"revision":"ac4b3aab5064459b0ff3a1e3bb00bb78","url":"tags/スクレイピング.html"},{"revision":"8a7290b6d859121a8ddb62ab87da73b4","url":"tags/奮闘記.html"},{"revision":"a0773728b6e81ca5783d4b3c5cfb68b2","url":"tags/日記.html"},{"revision":"511457903fdec37bb09efddc59e99c37","url":"tags/競馬.html"},{"revision":"364effb771bdda7a37ead2d1131d2619","url":"img/android-chrome-192x192.png"},{"revision":"ca40b49ca48522c86be6c4a209d71e72","url":"img/android-chrome-384x384.png"},{"revision":"659d313a468e99370ba67adfd47ed505","url":"img/apple-touch-icon.png"},{"revision":"17cefa300dd10a3cb948b8a32cffa2c6","url":"img/favicon-16x16.png"},{"revision":"671494e968feee2cc41c27bac5c4d4a6","url":"img/favicon-32x32.png"},{"revision":"44866d8b0d32344893ac21694f38a64d","url":"img/favicon.ico"},{"revision":"2e0473eb7ff9f347671fe66691c24460","url":"img/logo_dark.svg"},{"revision":"2e0473eb7ff9f347671fe66691c24460","url":"img/logo.svg"},{"revision":"f324e652c04f542fdc34d3b28cf60128","url":"img/mstile-150x150.png"},{"revision":"35574810a4fdc4c1bab7d6efd4a05434","url":"img/nono4rsibus.png"},{"revision":"d043cefe40c1ce4125c4fc8393b98350","url":"img/nono4rsibus.svg"},{"revision":"af625f0972be5eb178e6b35ae2ee144d","url":"img/safari-pinned-tab.svg"}],s=new v({fallbackToNetwork:!0});e.offlineMode&&(s.addToCacheList(t),e.debug&&console.log("[Docusaurus-PWA][SW]: addToCacheList",{precacheManifest:t})),await async function(e){}(),self.addEventListener("install",(t=>{e.debug&&console.log("[Docusaurus-PWA][SW]: install event",{event:t}),t.waitUntil(s.install(t))})),self.addEventListener("activate",(t=>{e.debug&&console.log("[Docusaurus-PWA][SW]: activate event",{event:t}),t.waitUntil(s.activate(t))})),self.addEventListener("fetch",(async t=>{if(e.offlineMode){const a=t.request.url,n=function(e){const t=[],s=new URL(e,self.location.href);return s.origin!==self.location.origin||(s.search="",s.hash="",t.push(s.href),s.pathname.endsWith("/")?t.push(`${s.href}index.html`):t.push(`${s.href}/index.html`)),t}(a);for(let i=0;i<n.length;i+=1){const r=n[i],c=s.getCacheKeyForURL(r);if(c){const s=caches.match(c);e.debug&&console.log("[Docusaurus-PWA][SW]: serving cached asset",{requestURL:a,possibleURL:r,possibleURLs:n,cacheKey:c,cachedResponse:s}),t.respondWith(s);break}}}})),self.addEventListener("message",(async t=>{e.debug&&console.log("[Docusaurus-PWA][SW]: message event",{event:t});const s=t.data?.type;"SKIP_WAITING"===s&&self.skipWaiting()}))})()})()})();