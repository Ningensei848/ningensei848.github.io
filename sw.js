(()=>{"use strict";var e={913:()=>{try{self["workbox:core:6.5.2"]&&_()}catch(e){}},977:()=>{try{self["workbox:precaching:6.5.2"]&&_()}catch(e){}},80:()=>{try{self["workbox:routing:6.5.2"]&&_()}catch(e){}},873:()=>{try{self["workbox:strategies:6.5.2"]&&_()}catch(e){}}},t={};function s(a){var n=t[a];if(void 0!==n)return n.exports;var i=t[a]={exports:{}};return e[a](i,i.exports,s),i.exports}(()=>{s(913);const e=(e,...t)=>{let s=e;return t.length>0&&(s+=` :: ${JSON.stringify(t)}`),s};class t extends Error{constructor(t,s){super(e(t,s)),this.name=t,this.details=s}}const a={googleAnalytics:"googleAnalytics",precache:"precache-v2",prefix:"workbox",runtime:"runtime",suffix:"undefined"!=typeof registration?registration.scope:""},n=e=>[a.prefix,e,a.suffix].filter((e=>e&&e.length>0)).join("-"),i=e=>e||n(a.precache),r=e=>e||n(a.runtime);function c(e,t){const s=t();return e.waitUntil(s),s}s(977);function o(e){if(!e)throw new t("add-to-cache-list-unexpected-type",{entry:e});if("string"==typeof e){const t=new URL(e,location.href);return{cacheKey:t.href,url:t.href}}const{revision:s,url:a}=e;if(!a)throw new t("add-to-cache-list-unexpected-type",{entry:e});if(!s){const e=new URL(a,location.href);return{cacheKey:e.href,url:e.href}}const n=new URL(a,location.href),i=new URL(a,location.href);return n.searchParams.set("__WB_REVISION__",s),{cacheKey:n.href,url:i.href}}class h{constructor(){this.updatedURLs=[],this.notUpdatedURLs=[],this.handlerWillStart=async({request:e,state:t})=>{t&&(t.originalRequest=e)},this.cachedResponseWillBeUsed=async({event:e,state:t,cachedResponse:s})=>{if("install"===e.type&&t&&t.originalRequest&&t.originalRequest instanceof Request){const e=t.originalRequest.url;s?this.notUpdatedURLs.push(e):this.updatedURLs.push(e)}return s}}}class l{constructor({precacheController:e}){this.cacheKeyWillBeUsed=async({request:e,params:t})=>{const s=(null==t?void 0:t.cacheKey)||this._precacheController.getCacheKeyForURL(e.url);return s?new Request(s,{headers:e.headers}):e},this._precacheController=e}}let u;async function f(e,s){let a=null;if(e.url){a=new URL(e.url).origin}if(a!==self.location.origin)throw new t("cross-origin-copy-response",{origin:a});const n=e.clone(),i={headers:new Headers(n.headers),status:n.status,statusText:n.statusText},r=s?s(i):i,c=function(){if(void 0===u){const e=new Response("");if("body"in e)try{new Response(e.body),u=!0}catch(e){u=!1}u=!1}return u}()?n.body:await n.blob();return new Response(c,r)}function d(e,t){const s=new URL(e);for(const e of t)s.searchParams.delete(e);return s.href}class p{constructor(){this.promise=new Promise(((e,t)=>{this.resolve=e,this.reject=t}))}}const g=new Set;s(873);function y(e){return"string"==typeof e?new Request(e):e}class w{constructor(e,t){this._cacheKeys={},Object.assign(this,t),this.event=t.event,this._strategy=e,this._handlerDeferred=new p,this._extendLifetimePromises=[],this._plugins=[...e.plugins],this._pluginStateMap=new Map;for(const e of this._plugins)this._pluginStateMap.set(e,{});this.event.waitUntil(this._handlerDeferred.promise)}async fetch(e){const{event:s}=this;let a=y(e);if("navigate"===a.mode&&s instanceof FetchEvent&&s.preloadResponse){const e=await s.preloadResponse;if(e)return e}const n=this.hasCallback("fetchDidFail")?a.clone():null;try{for(const e of this.iterateCallbacks("requestWillFetch"))a=await e({request:a.clone(),event:s})}catch(e){if(e instanceof Error)throw new t("plugin-error-request-will-fetch",{thrownErrorMessage:e.message})}const i=a.clone();try{let e;e=await fetch(a,"navigate"===a.mode?void 0:this._strategy.fetchOptions);for(const t of this.iterateCallbacks("fetchDidSucceed"))e=await t({event:s,request:i,response:e});return e}catch(e){throw n&&await this.runCallbacks("fetchDidFail",{error:e,event:s,originalRequest:n.clone(),request:i.clone()}),e}}async fetchAndCachePut(e){const t=await this.fetch(e),s=t.clone();return this.waitUntil(this.cachePut(e,s)),t}async cacheMatch(e){const t=y(e);let s;const{cacheName:a,matchOptions:n}=this._strategy,i=await this.getCacheKey(t,"read"),r=Object.assign(Object.assign({},n),{cacheName:a});s=await caches.match(i,r);for(const e of this.iterateCallbacks("cachedResponseWillBeUsed"))s=await e({cacheName:a,matchOptions:n,cachedResponse:s,request:i,event:this.event})||void 0;return s}async cachePut(e,s){const a=y(e);var n;await(n=0,new Promise((e=>setTimeout(e,n))));const i=await this.getCacheKey(a,"write");if(!s)throw new t("cache-put-with-no-response",{url:(r=i.url,new URL(String(r),location.href).href.replace(new RegExp(`^${location.origin}`),""))});var r;const c=await this._ensureResponseSafeToCache(s);if(!c)return!1;const{cacheName:o,matchOptions:h}=this._strategy,l=await self.caches.open(o),u=this.hasCallback("cacheDidUpdate"),f=u?await async function(e,t,s,a){const n=d(t.url,s);if(t.url===n)return e.match(t,a);const i=Object.assign(Object.assign({},a),{ignoreSearch:!0}),r=await e.keys(t,i);for(const t of r)if(n===d(t.url,s))return e.match(t,a)}(l,i.clone(),["__WB_REVISION__"],h):null;try{await l.put(i,u?c.clone():c)}catch(e){if(e instanceof Error)throw"QuotaExceededError"===e.name&&await async function(){for(const e of g)await e()}(),e}for(const e of this.iterateCallbacks("cacheDidUpdate"))await e({cacheName:o,oldResponse:f,newResponse:c.clone(),request:i,event:this.event});return!0}async getCacheKey(e,t){const s=`${e.url} | ${t}`;if(!this._cacheKeys[s]){let a=e;for(const e of this.iterateCallbacks("cacheKeyWillBeUsed"))a=y(await e({mode:t,request:a,event:this.event,params:this.params}));this._cacheKeys[s]=a}return this._cacheKeys[s]}hasCallback(e){for(const t of this._strategy.plugins)if(e in t)return!0;return!1}async runCallbacks(e,t){for(const s of this.iterateCallbacks(e))await s(t)}*iterateCallbacks(e){for(const t of this._strategy.plugins)if("function"==typeof t[e]){const s=this._pluginStateMap.get(t),a=a=>{const n=Object.assign(Object.assign({},a),{state:s});return t[e](n)};yield a}}waitUntil(e){return this._extendLifetimePromises.push(e),e}async doneWaiting(){let e;for(;e=this._extendLifetimePromises.shift();)await e}destroy(){this._handlerDeferred.resolve(null)}async _ensureResponseSafeToCache(e){let t=e,s=!1;for(const e of this.iterateCallbacks("cacheWillUpdate"))if(t=await e({request:this.request,response:t,event:this.event})||void 0,s=!0,!t)break;return s||t&&200!==t.status&&(t=void 0),t}}class _ extends class{constructor(e={}){this.cacheName=r(e.cacheName),this.plugins=e.plugins||[],this.fetchOptions=e.fetchOptions,this.matchOptions=e.matchOptions}handle(e){const[t]=this.handleAll(e);return t}handleAll(e){e instanceof FetchEvent&&(e={event:e,request:e.request});const t=e.event,s="string"==typeof e.request?new Request(e.request):e.request,a="params"in e?e.params:void 0,n=new w(this,{event:t,request:s,params:a}),i=this._getResponse(n,s,t);return[i,this._awaitComplete(i,n,s,t)]}async _getResponse(e,s,a){let n;await e.runCallbacks("handlerWillStart",{event:a,request:s});try{if(n=await this._handle(s,e),!n||"error"===n.type)throw new t("no-response",{url:s.url})}catch(t){if(t instanceof Error)for(const i of e.iterateCallbacks("handlerDidError"))if(n=await i({error:t,event:a,request:s}),n)break;if(!n)throw t}for(const t of e.iterateCallbacks("handlerWillRespond"))n=await t({event:a,request:s,response:n});return n}async _awaitComplete(e,t,s,a){let n,i;try{n=await e}catch(i){}try{await t.runCallbacks("handlerDidRespond",{event:a,request:s,response:n}),await t.doneWaiting()}catch(e){e instanceof Error&&(i=e)}if(await t.runCallbacks("handlerDidComplete",{event:a,request:s,response:n,error:i}),t.destroy(),i)throw i}}{constructor(e={}){e.cacheName=i(e.cacheName),super(e),this._fallbackToNetwork=!1!==e.fallbackToNetwork,this.plugins.push(_.copyRedirectedCacheableResponsesPlugin)}async _handle(e,t){const s=await t.cacheMatch(e);return s||(t.event&&"install"===t.event.type?await this._handleInstall(e,t):await this._handleFetch(e,t))}async _handleFetch(e,s){let a;const n=s.params||{};if(!this._fallbackToNetwork)throw new t("missing-precache-entry",{cacheName:this.cacheName,url:e.url});{0;const t=n.integrity,i=e.integrity,r=!i||i===t;if(a=await s.fetch(new Request(e,{integrity:i||t})),t&&r){this._useDefaultCacheabilityPluginIfNeeded();await s.cachePut(e,a.clone());0}}return a}async _handleInstall(e,s){this._useDefaultCacheabilityPluginIfNeeded();const a=await s.fetch(e);if(!await s.cachePut(e,a.clone()))throw new t("bad-precaching-response",{url:e.url,status:a.status});return a}_useDefaultCacheabilityPluginIfNeeded(){let e=null,t=0;for(const[s,a]of this.plugins.entries())a!==_.copyRedirectedCacheableResponsesPlugin&&(a===_.defaultPrecacheCacheabilityPlugin&&(e=s),a.cacheWillUpdate&&t++);0===t?this.plugins.push(_.defaultPrecacheCacheabilityPlugin):t>1&&null!==e&&this.plugins.splice(e,1)}}_.defaultPrecacheCacheabilityPlugin={cacheWillUpdate:async({response:e})=>!e||e.status>=400?null:e},_.copyRedirectedCacheableResponsesPlugin={cacheWillUpdate:async({response:e})=>e.redirected?await f(e):e};class v{constructor({cacheName:e,plugins:t=[],fallbackToNetwork:s=!0}={}){this._urlsToCacheKeys=new Map,this._urlsToCacheModes=new Map,this._cacheKeysToIntegrities=new Map,this._strategy=new _({cacheName:i(e),plugins:[...t,new l({precacheController:this})],fallbackToNetwork:s}),this.install=this.install.bind(this),this.activate=this.activate.bind(this)}get strategy(){return this._strategy}precache(e){this.addToCacheList(e),this._installAndActiveListenersAdded||(self.addEventListener("install",this.install),self.addEventListener("activate",this.activate),this._installAndActiveListenersAdded=!0)}addToCacheList(e){const s=[];for(const a of e){"string"==typeof a?s.push(a):a&&void 0===a.revision&&s.push(a.url);const{cacheKey:e,url:n}=o(a),i="string"!=typeof a&&a.revision?"reload":"default";if(this._urlsToCacheKeys.has(n)&&this._urlsToCacheKeys.get(n)!==e)throw new t("add-to-cache-list-conflicting-entries",{firstEntry:this._urlsToCacheKeys.get(n),secondEntry:e});if("string"!=typeof a&&a.integrity){if(this._cacheKeysToIntegrities.has(e)&&this._cacheKeysToIntegrities.get(e)!==a.integrity)throw new t("add-to-cache-list-conflicting-integrities",{url:n});this._cacheKeysToIntegrities.set(e,a.integrity)}if(this._urlsToCacheKeys.set(n,e),this._urlsToCacheModes.set(n,i),s.length>0){const e=`Workbox is precaching URLs without revision info: ${s.join(", ")}\nThis is generally NOT safe. Learn more at https://bit.ly/wb-precache`;console.warn(e)}}}install(e){return c(e,(async()=>{const t=new h;this.strategy.plugins.push(t);for(const[t,s]of this._urlsToCacheKeys){const a=this._cacheKeysToIntegrities.get(s),n=this._urlsToCacheModes.get(t),i=new Request(t,{integrity:a,cache:n,credentials:"same-origin"});await Promise.all(this.strategy.handleAll({params:{cacheKey:s},request:i,event:e}))}const{updatedURLs:s,notUpdatedURLs:a}=t;return{updatedURLs:s,notUpdatedURLs:a}}))}activate(e){return c(e,(async()=>{const e=await self.caches.open(this.strategy.cacheName),t=await e.keys(),s=new Set(this._urlsToCacheKeys.values()),a=[];for(const n of t)s.has(n.url)||(await e.delete(n),a.push(n.url));return{deletedURLs:a}}))}getURLsToCacheKeys(){return this._urlsToCacheKeys}getCachedURLs(){return[...this._urlsToCacheKeys.keys()]}getCacheKeyForURL(e){const t=new URL(e,location.href);return this._urlsToCacheKeys.get(t.href)}getIntegrityForCacheKey(e){return this._cacheKeysToIntegrities.get(e)}async matchPrecache(e){const t=e instanceof Request?e.url:e,s=this.getCacheKeyForURL(t);if(s){return(await self.caches.open(this.strategy.cacheName)).match(s)}}createHandlerBoundToURL(e){const s=this.getCacheKeyForURL(e);if(!s)throw new t("non-precached-url",{url:e});return t=>(t.request=new Request(e),t.params=Object.assign({cacheKey:s},t.params),this.strategy.handle(t))}}s(80);(async()=>{const e=function(){const e=JSON.parse(new URLSearchParams(self.location.search).get("params"));return e.debug&&console.log("[Docusaurus-PWA][SW]: Service Worker params:",e),e}(),t=[{"revision":"f0e1796c710e3794deaadfd93f02184e","url":"2022/03/03.html"},{"revision":"98d5a3b3ac0e2014ce61ac59aca0dfc3","url":"2022/03/08.html"},{"revision":"e0ae79f4b30f90ddaea7744a4dd3f07c","url":"2022/03/12.html"},{"revision":"27fd77cf66a55d4d0b4125082b804b1f","url":"2022/03/13.html"},{"revision":"b51ac2f698de1ed3ebb0b3242e22d41c","url":"2022/03/23.html"},{"revision":"301883bce06d633de00ff016fef7c6c5","url":"2022/03/28.html"},{"revision":"c8097562c5d51ce82cf075ef549bc66e","url":"2022/03/30.html"},{"revision":"8acdfd6a27f50686246f311880008ec4","url":"2022/04/01.html"},{"revision":"c11a7d461d36656a2b124150d79a3af9","url":"2022/04/06.html"},{"revision":"61530e28d490a8ceced9c188031ff977","url":"2022/05/11.html"},{"revision":"0667f5c7abc000f8207f698bdea9febb","url":"404.html"},{"revision":"3a253f61d505e737bf3c8021ab880c5d","url":"archive.html"},{"revision":"6f2e653d0b2b181c419ff8e3cd4b4347","url":"assets/css/styles.dd5243b7.css"},{"revision":"bc7e49e14af18e7793230fe70f14ce2f","url":"assets/js/01a85c17.ac415bff.js"},{"revision":"9c6e0bb0c4819d1acf7536f37ede2ea0","url":"assets/js/11112098.91b6fa60.js"},{"revision":"be66287c356766b7da4f6e136474b54b","url":"assets/js/1475.7821a437.js"},{"revision":"ba5331210c90fb0b155a2b9e381b8f75","url":"assets/js/16bfa084.89ab5792.js"},{"revision":"fdb2aac1d2561f7febce072abc0d8396","url":"assets/js/1963432a.3d81f793.js"},{"revision":"e33c8ab391398a2ee53ba4480af2184d","url":"assets/js/1c125c9b.c0bfc707.js"},{"revision":"1a18fb8c205f38524c099d6680dca9cd","url":"assets/js/1d88fcc7.698c7b94.js"},{"revision":"0e5bcf65658c9af1e58594527f54e211","url":"assets/js/1e0de7ec.7ec0fc2b.js"},{"revision":"0f52da8a7d187fa797f259634d5f0831","url":"assets/js/230.ebd3f54e.js"},{"revision":"391ef2883209d572e766f902799d2f1c","url":"assets/js/2a3f3b74.6858674a.js"},{"revision":"9330832acbed0861c2eaf6bf567a87d7","url":"assets/js/2e801cce.4330cc19.js"},{"revision":"cedd51da71b2e0d1a3eee79ae82df5be","url":"assets/js/39eef7be.b63a3c4e.js"},{"revision":"24edb2c515d9bc0247eff440e2ea9be4","url":"assets/js/3deadfc4.d046279b.js"},{"revision":"88f2aa196ebca75f6ed8d746a0073b03","url":"assets/js/420d83dc.e20d9b51.js"},{"revision":"59751f85a23ece8170fce217dcbc8926","url":"assets/js/43654548.514797fa.js"},{"revision":"72e16105548e055dfe6ebdbeb170af9d","url":"assets/js/4608.11988b4f.js"},{"revision":"6cfc47617d12b0bbb4a6c8585401f2e1","url":"assets/js/5131.545f3a50.js"},{"revision":"9ed02b0e0b0293fc9ce0264574cd1d78","url":"assets/js/5283.5cd14b74.js"},{"revision":"53620d3b1c74a2109268927cab3ddcb7","url":"assets/js/56030f37.b4e4fadd.js"},{"revision":"aff12bae0f80401ed157509fd6d367a3","url":"assets/js/59883241.760436cb.js"},{"revision":"aa6ec497c598e696494cc16c02d60979","url":"assets/js/6464f901.75872c05.js"},{"revision":"fb49d367e51c376ca1d4d8aafb6bcfcd","url":"assets/js/6875c492.99697c4b.js"},{"revision":"f442c5423b265e71634fe60719218855","url":"assets/js/718e3478.13dda9ed.js"},{"revision":"71ee4b8e7b6613e498ffe46e794fefdf","url":"assets/js/814f3328.14a8a6b9.js"},{"revision":"d8088701a15d39aad64b677587134ee0","url":"assets/js/81939e20.f0b977da.js"},{"revision":"a6a4964827a21c0cd0f6dcfdd3eb79a8","url":"assets/js/8767f175.0e661acb.js"},{"revision":"3aba4a38cb16dfd3edbaa2d40180f664","url":"assets/js/917e5a49.d10c6a36.js"},{"revision":"512812801fdddd342abb43e0f1938902","url":"assets/js/967a33ff.4a1f304b.js"},{"revision":"e32ab9ec4b3785206bf8e7c77a8c2014","url":"assets/js/98f2f6cf.5c4c7740.js"},{"revision":"4b47031fb567d8218d053ed0cc36ce4c","url":"assets/js/9e4087bc.98f92c11.js"},{"revision":"67cb46f2864f308af523df799aa29abb","url":"assets/js/a094e1d7.8c14447b.js"},{"revision":"6d4e4bdfc9f341ed76d1c8d6a54b2fdc","url":"assets/js/a5557bb9.12e4f974.js"},{"revision":"caf8b189d53e16dde6b326ae8c996667","url":"assets/js/a6aa9e1f.b8b2f7ac.js"},{"revision":"c23d522704ef19024d2fc32e2d237744","url":"assets/js/b72ac345.757693ad.js"},{"revision":"9ccce190781ec4a0b99d07c5f95d3e6d","url":"assets/js/b83475be.3252b52b.js"},{"revision":"4eae7378d49750ebde4db1d6c0821ab5","url":"assets/js/c173763c.41ae6a3a.js"},{"revision":"91adbb0b79bfaccf4a4e0aebd51e6b78","url":"assets/js/c573638f.fe9d389f.js"},{"revision":"5091a220f224b855c3dde4212b7cf3cf","url":"assets/js/c7015929.cf0ee417.js"},{"revision":"53299ab001cd8ceb837c1983e791a3b4","url":"assets/js/ca1c7590.31595ec5.js"},{"revision":"2cd90233d0dd9da6efcd876f5b729b7e","url":"assets/js/ccc49370.61743bf4.js"},{"revision":"ab30770cd078f892d6c7b926b870401f","url":"assets/js/ccc96e7c.8c83edf3.js"},{"revision":"544c51b9e8402ce6afcd45e79c2b728b","url":"assets/js/d8a7e9fa.85890f6b.js"},{"revision":"3d92c9f21f41c4ab55c7223c89572741","url":"assets/js/d9f8f7d4.dd699c4a.js"},{"revision":"c2f4bb79cdc4625182f99d372f4b5f68","url":"assets/js/df0696ba.70162dc6.js"},{"revision":"c5577d30a3528289f633d9de0cc2d1ef","url":"assets/js/e42991a9.890051b0.js"},{"revision":"3caeeea8fde91bea68689af4250d2044","url":"assets/js/e53cb30c.17f1be1e.js"},{"revision":"8dc4f0c3e97a14cdb62f8e7d6baa6819","url":"assets/js/f09638d0.15eb6316.js"},{"revision":"9a053ce8253a0c78469483076a532563","url":"assets/js/f281c90e.a62d1d10.js"},{"revision":"6af4bfedd43f3248e01b76f7cebbc5b7","url":"assets/js/f46cc6da.5076c316.js"},{"revision":"769be26c37031ff651c5569993d7f624","url":"assets/js/f580a9d0.0e318c71.js"},{"revision":"b10999eba0eedb008cdae0dfaf34e723","url":"assets/js/f6af7b19.b9500da8.js"},{"revision":"f7d2954a6fae3cd9d33ee569cb01a0da","url":"assets/js/fdd1792a.53810201.js"},{"revision":"ddc10373cdaf6c3c3d956d2231919868","url":"assets/js/fe4fd697.7d963360.js"},{"revision":"b23d9caa505be0adc9d35a6364f9375f","url":"assets/js/main.69934a8a.js"},{"revision":"43f565c3b5115246d4d43c6278e40684","url":"assets/js/runtime~main.744b19ea.js"},{"revision":"1cf22431d6a92d4ac64fb3ca2ac845ad","url":"feed.json"},{"revision":"5ab4600159af87d7a5e9bd71ab93ecb8","url":"index.html"},{"revision":"c3309940362f548825a8e2ca909e2dfa","url":"tags.html"},{"revision":"1a4ac6d9d0d65adf1dfae6c60ad74446","url":"tags/lod.html"},{"revision":"1a0d6a3303adf598dff23e5cf2cc84c9","url":"tags/python.html"},{"revision":"e8e40ebc69b35ee5d1f7bb94de7958db","url":"tags/オープンデータ.html"},{"revision":"f0ef9cb21ec262b912d01833d8353f6d","url":"tags/オープンレター.html"},{"revision":"10de877b156597fd6dcd5a94863be006","url":"tags/キャンセルカルチャー.html"},{"revision":"84452b56d0f509d402c8c710ce8257f0","url":"tags/スクレイピング.html"},{"revision":"9a8927549a4224ab1a9957ca4ff8e235","url":"tags/奮闘記.html"},{"revision":"dd8d665160d12466517fdcdb82e74d9a","url":"tags/日記.html"},{"revision":"12d5575247587193223a64f28b6c193b","url":"tags/競馬.html"},{"revision":"364effb771bdda7a37ead2d1131d2619","url":"img/android-chrome-192x192.png"},{"revision":"ca40b49ca48522c86be6c4a209d71e72","url":"img/android-chrome-384x384.png"},{"revision":"659d313a468e99370ba67adfd47ed505","url":"img/apple-touch-icon.png"},{"revision":"17cefa300dd10a3cb948b8a32cffa2c6","url":"img/favicon-16x16.png"},{"revision":"671494e968feee2cc41c27bac5c4d4a6","url":"img/favicon-32x32.png"},{"revision":"44866d8b0d32344893ac21694f38a64d","url":"img/favicon.ico"},{"revision":"2e0473eb7ff9f347671fe66691c24460","url":"img/logo_dark.svg"},{"revision":"2e0473eb7ff9f347671fe66691c24460","url":"img/logo.svg"},{"revision":"f324e652c04f542fdc34d3b28cf60128","url":"img/mstile-150x150.png"},{"revision":"35574810a4fdc4c1bab7d6efd4a05434","url":"img/nono4rsibus.png"},{"revision":"d043cefe40c1ce4125c4fc8393b98350","url":"img/nono4rsibus.svg"},{"revision":"af625f0972be5eb178e6b35ae2ee144d","url":"img/safari-pinned-tab.svg"}],s=new v({fallbackToNetwork:!0});e.offlineMode&&(s.addToCacheList(t),e.debug&&console.log("[Docusaurus-PWA][SW]: addToCacheList",{precacheManifest:t})),await async function(e){}(),self.addEventListener("install",(t=>{e.debug&&console.log("[Docusaurus-PWA][SW]: install event",{event:t}),t.waitUntil(s.install(t))})),self.addEventListener("activate",(t=>{e.debug&&console.log("[Docusaurus-PWA][SW]: activate event",{event:t}),t.waitUntil(s.activate(t))})),self.addEventListener("fetch",(async t=>{if(e.offlineMode){const a=t.request.url,n=function(e){const t=[],s=new URL(e,self.location.href);return s.origin!==self.location.origin||(s.search="",s.hash="",t.push(s.href),s.pathname.endsWith("/")?t.push(`${s.href}index.html`):t.push(`${s.href}/index.html`)),t}(a);for(let i=0;i<n.length;i+=1){const r=n[i],c=s.getCacheKeyForURL(r);if(c){const s=caches.match(c);e.debug&&console.log("[Docusaurus-PWA][SW]: serving cached asset",{requestURL:a,possibleURL:r,possibleURLs:n,cacheKey:c,cachedResponse:s}),t.respondWith(s);break}}}})),self.addEventListener("message",(async t=>{e.debug&&console.log("[Docusaurus-PWA][SW]: message event",{event:t});const s=t.data?.type;"SKIP_WAITING"===s&&self.skipWaiting()}))})()})()})();